CREATE TABLE TRANSP.ROUTE
(
  ROUTE_NO     VARCHAR2(50 BYTE)                NOT NULL,
  DESCRIPTION  VARCHAR2(60 BYTE)                NOT NULL,
  ROUTE_TIME   VARCHAR2(2 BYTE),
  ROUTE_ID     VARCHAR2(18 BYTE),
  OBSOLETE     VARCHAR2(1 BYTE)
);

CREATE TABLE TRANSP.REGION
(
  CODE         VARCHAR2(16 BYTE)                NOT NULL,
  NAME         VARCHAR2(20 BYTE)                NOT NULL,
  DESCRIPTION  VARCHAR2(60 BYTE),
  OBSOLETE     VARCHAR2(1 BYTE)
);

ALTER TABLE TRANSP.REGION ADD (CONSTRAINT PK_REGION PRIMARY KEY (CODE));

ALTER TABLE TRANSP.REGION ADD UNIQUE (NAME);

CREATE TABLE TRANSP.EMPLOYEE_ROLE_TYPE
(
  CODE      VARCHAR2(16 BYTE)            NOT NULL,
  NAME    VARCHAR2(20 BYTE)            NOT NULL,
  DESCRIPTION  VARCHAR2(60 BYTE)
);

ALTER TABLE TRANSP.EMPLOYEE_ROLE_TYPE ADD (CONSTRAINT PK_EMPLOYEE_ROLE_TYPE PRIMARY KEY (CODE));

ALTER TABLE TRANSP.EMPLOYEE_ROLE_TYPE ADD UNIQUE (NAME);

CREATE TABLE TRANSP.EMPLOYEEROLE
(
  KRONOS_ID VARCHAR2(10 BYTE) NOT NULL,
  ROLE VARCHAR2(16 BYTE)
);


ALTER TABLE TRANSP.EMPLOYEEROLE ADD (CONSTRAINT PK_EMPLOYEEROLE PRIMARY KEY (KRONOS_ID, ROLE));
ALTER TABLE TRANSP.EMPLOYEEROLE ADD (CONSTRAINT ACT_EMPLOYEEROLE_FK FOREIGN KEY (ROLE) REFERENCES TRANSP.EMPLOYEE_ROLE_TYPE (CODE));


CREATE TABLE TRANSP.ZONETYPE_RESOURCE
(
  ZONETYPE_ID           VARCHAR2(16 BYTE) NOT NULL,
  ROLE  VARCHAR2(16 BYTE) NOT NULL,
  MAXIMUM_NO         NUMBER(9),
  REQUIRED_NO         NUMBER(9)
);

ALTER TABLE TRANSP.ZONETYPE_RESOURCE ADD (CONSTRAINT PK_ZONETYPE_RESOURCE PRIMARY KEY (ZONETYPE_ID, ROLE));
ALTER TABLE TRANSP.ZONETYPE_RESOURCE ADD (CONSTRAINT ACT_ZONETYPE_RESOURCE_FK FOREIGN KEY (ROLE) REFERENCES TRANSP.EMPLOYEE_ROLE_TYPE (CODE));
ALTER TABLE TRANSP.ZONETYPE_RESOURCE ADD (CONSTRAINT ACT_ZONETYPE_ID_FK FOREIGN KEY (ZONETYPE_ID) REFERENCES TRANSP.TRN_ZONETYPE (ID));



CREATE TABLE TRANSP.ZONE
(
  ZONE_CODE   VARCHAR2(5 BYTE)                  NOT NULL,
  NAME        VARCHAR2(30 BYTE)                 NOT NULL,
  UNATTENDED  VARCHAR2(1 BYTE),
  ZONE_TYPE   VARCHAR2(16 BYTE),
  AREA        VARCHAR2(8 BYTE),
  REGION      VARCHAR2(16 BYTE)                 NOT NULL,
  OBSOLETE    VARCHAR2(1 BYTE)
);

ALTER TABLE TRANSP.ZONE ADD (CONSTRAINT PK_ZONE PRIMARY KEY (ZONE_CODE));
ALTER TABLE TRANSP.ZONE ADD UNIQUE (NAME);

ALTER TABLE TRANSP.ZONE ADD (CONSTRAINT ACT_ZONEZT_FK FOREIGN KEY (ZONE_TYPE) REFERENCES TRANSP.TRN_ZONETYPE (ID));
ALTER TABLE TRANSP.ZONE ADD (CONSTRAINT ACT_ZONEAREA_FK FOREIGN KEY (AREA) REFERENCES TRANSP.TRN_AREA (CODE));
ALTER TABLE TRANSP.ZONE ADD (CONSTRAINT ACT_ZONEREGION_FK FOREIGN KEY (REGION) REFERENCES TRANSP.REGION (CODE));


CREATE TABLE TRANSP.PLAN
(
  PLAN_ID         VARCHAR2(10 BYTE)             NOT NULL,
  PLAN_DATE       DATE                          NOT NULL,
  ZONE            VARCHAR2(16 BYTE),
  REGION          VARCHAR2(16 BYTE)             NOT NULL,
  SUPERVISOR_ID   VARCHAR2(10 BYTE),
  FIRST_DLV_TIME  DATE                          NOT NULL,
  START_TIME      DATE                          NOT NULL,
  SEQUENCE        NUMBER(5)                     NOT NULL,
  IS_BULLPEN      VARCHAR2(1 BYTE)
);

ALTER TABLE TRANSP.PLAN ADD (CONSTRAINT PK_PLAN PRIMARY KEY (PLAN_ID));

ALTER TABLE TRANSP.PLAN ADD (CONSTRAINT ACT_PLANZONE_FK FOREIGN KEY (ZONE) REFERENCES TRANSP.ZONE (ZONE_CODE));
ALTER TABLE TRANSP.PLAN ADD (CONSTRAINT ACT_PLANREGION_FK FOREIGN KEY (REGION) REFERENCES TRANSP.REGION (CODE));


CREATE TABLE TRANSP.PLAN_RESOURCE
(
  PLAN_ID      VARCHAR2(10 BYTE)                NOT NULL,
  RESOURCE_ID  VARCHAR2(10 BYTE)                NOT NULL,
  ROLE         VARCHAR2(16 BYTE)                NOT NULL
);

ALTER TABLE TRANSP.PLAN_RESOURCE ADD (CONSTRAINT PK_PLAN_RESOURCE PRIMARY KEY (PLAN_ID, RESOURCE_ID));

ALTER TABLE TRANSP.PLAN_RESOURCE ADD (CONSTRAINT ACT_PLAN_ID_FK FOREIGN KEY (PLAN_ID) REFERENCES TRANSP.PLAN (PLAN_ID));
ALTER TABLE TRANSP.PLAN_RESOURCE ADD (CONSTRAINT ACT_PLAN_ROLE_FK FOREIGN KEY (ROLE) REFERENCES TRANSP.EMPLOYEE_ROLE_TYPE (CODE));

CREATE TABLE TRANSP.DISPOSITION_TYPE
(
  CODE         VARCHAR2(16 BYTE)                NOT NULL,
  NAME         VARCHAR2(32 BYTE)                NOT NULL,
  DESCRIPTION  VARCHAR2(256 BYTE)
);

ALTER TABLE TRANSP.DISPOSITION_TYPE ADD (CONSTRAINT DISP_CODE_PK PRIMARY KEY (CODE));


CREATE TABLE TRANSP.DISPATCH
(
  DISPATCH_ID     VARCHAR2(16 BYTE)             NOT NULL,
  DISPATCH_DATE   DATE                          NOT NULL,
  ZONE            VARCHAR2(16 BYTE),
  SUPERVISOR_ID   VARCHAR2(10 BYTE),
  ROUTE           VARCHAR2(18 BYTE),
  TRUCK           VARCHAR2(6 BYTE),
  START_TIME      DATE                          NOT NULL,
  FIRST_DLV_TIME  DATE,
  CONFIRMED       CHAR(1 BYTE),
  DISPOSITION     VARCHAR2(16 BYTE),
  PLAN_ID         VARCHAR2(10 BYTE),
  COMMENTS        VARCHAR2(1024 BYTE),
  ISBULLPEN       CHAR(1 BYTE),
  REGION          VARCHAR2(16 BYTE)             NOT NULL
); 

ALTER TABLE TRANSP.DISPATCH ADD (CONSTRAINT PK_DISPATCH PRIMARY KEY (DISPATCH_ID));

ALTER TABLE TRANSP.DISPATCH ADD (CONSTRAINT ACT_DISPATCHZONE_FK FOREIGN KEY (ZONE) REFERENCES TRANSP.ZONE (ZONE_CODE));
ALTER TABLE TRANSP.DISPATCH ADD (CONSTRAINT DISPATCH_DISP_CODE_FK FOREIGN KEY (DISPOSITION) REFERENCES TRANSP.DISPOSITION_TYPE (CODE));

ALTER TABLE TRANSP.DISPATCH ADD (CHECK (CONFIRMED = 'Y'  OR CONFIRMED = 'N'));

ALTER TABLE TRANSP.DISPATCH ADD (CHECK (ISBULLPEN= 'Y'  OR ISBULLPEN= 'N'));


CREATE TABLE TRANSP.DISPATCH_RESOURCE
(
  DISPATCH_ID          VARCHAR2(10 BYTE)  NOT NULL,
  RESOURCE_ID        VARCHAR2(10 BYTE)   NOT NULL,
  ROLE      VARCHAR2(16 BYTE)   NOT NULL,
  NEXTEL_NO        VARCHAR2(16 BYTE)
);

CREATE SEQUENCE TRANSP.DISPATCHSEQ
   START WITH 1
   MAXVALUE 1000000000000000000000000000
   MINVALUE 1
   NOCYCLE
   CACHE 20
   NOORDER;
   
CREATE SEQUENCE TRANSP.ROUTESEQ
   START WITH 1
   MAXVALUE 1000000000000000000000000000
   MINVALUE 1
   NOCYCLE
   CACHE 20
   NOORDER;   

ALTER TABLE TRANSP.DISPATCH_RESOURCE ADD (CONSTRAINT PK_DISPATCH_RESOURCE PRIMARY KEY (DISPATCH_ID, RESOURCE_ID));

ALTER TABLE TRANSP.DISPATCH_RESOURCE ADD (CONSTRAINT ACT_DISPATCH_ID_FK FOREIGN KEY (DISPATCH_ID) REFERENCES TRANSP.DISPATCH (DISPATCH_ID));
ALTER TABLE TRANSP.DISPATCH_RESOURCE ADD (CONSTRAINT ACT_DISPATCH_ROLE_FK FOREIGN KEY (ROLE) REFERENCES TRANSP.EMPLOYEE_ROLE_TYPE (CODE));


GRANT SELECT,INSERT,UPDATE,DELETE ON  TRANSP.ROUTE TO FDTRN_PRDA;
GRANT SELECT,INSERT,UPDATE,DELETE ON  TRANSP.REGION TO FDTRN_PRDA;
GRANT SELECT,INSERT,UPDATE,DELETE ON  TRANSP.EMPLOYEE_ROLE_TYPE TO FDTRN_PRDA;
GRANT SELECT,INSERT,UPDATE,DELETE ON  TRANSP.EMPLOYEEROLE TO FDTRN_PRDA;
GRANT SELECT,INSERT,UPDATE,DELETE ON  TRANSP.ZONETYPE_RESOURCE TO FDTRN_PRDA;
GRANT SELECT,INSERT,UPDATE,DELETE ON  TRANSP.ZONE TO FDTRN_PRDA;
GRANT SELECT,INSERT,UPDATE,DELETE ON  TRANSP.PLAN TO FDTRN_PRDA;
GRANT SELECT,INSERT,UPDATE,DELETE ON  TRANSP.PLAN_RESOURCE TO FDTRN_PRDA;
GRANT SELECT,INSERT,UPDATE,DELETE ON  TRANSP.DISPATCH TO FDTRN_PRDA;
GRANT SELECT,INSERT,UPDATE,DELETE ON  TRANSP.DISPATCH_RESOURCE TO FDTRN_PRDA;
GRANT SELECT,INSERT,UPDATE,DELETE ON  TRANSP.DISPOSITION_TYPE TO FDTRN_PRDA;


GRANT SELECT,INSERT,UPDATE,DELETE ON  TRANSP.ZONE TO FDSTORE_PRDA;
GRANT SELECT,INSERT,UPDATE,DELETE ON  ZONE TO FDSTORE_PRDB;

GRANT SELECT ON  TRANSP.DISPATCHSEQ TO FDTRN_PRDA;
GRANT SELECT ON  TRANSP.ROUTESEQ TO FDTRN_PRDA;


GRANT SELECT ON  TRANSP.ROUTE TO APPDEV;
GRANT SELECT ON  TRANSP.REGION TO APPDEV;
GRANT SELECT ON  TRANSP.EMPLOYEE_ROLE_TYPE TO APPDEV;
GRANT SELECT ON  TRANSP.EMPLOYEEROLE TO APPDEV;
GRANT SELECT ON  TRANSP.ZONETYPE_RESOURCE TO APPDEV;
GRANT SELECT ON  TRANSP.ZONE TO APPDEV;
GRANT SELECT ON  TRANSP.PLAN TO APPDEV;
GRANT SELECT ON  TRANSP.PLAN_RESOURCE TO APPDEV;
GRANT SELECT ON  TRANSP.DISPATCH TO APPDEV;
GRANT SELECT ON  TRANSP.DISPATCH_RESOURCE TO APPDEV;
GRANT SELECT ON  TRANSP.DISPOSITION_TYPE TO APPDEV;

GRANT SELECT ON  TRANSP.DISPATCHSEQ TO APPDEV;
GRANT SELECT ON  TRANSP.ROUTESEQ TO APPDEV;

GRANT SELECT,INSERT,UPDATE,DELETE ON  DLV.REGION TO FDTRN_PRDA;
GRANT SELECT,INSERT,UPDATE,DELETE ON  DLV.REGION_DATA TO FDTRN_PRDA;
GRANT SELECT,INSERT,UPDATE,DELETE ON  DLV.ZONE TO FDTRN_PRDA;





