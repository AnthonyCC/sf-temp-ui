DROP TABLE CUST.PROMO_CUST_STRATEGY CASCADE CONSTRAINTS;

DROP TABLE CUST.PROMO_CART_STRATEGY CASCADE CONSTRAINTS;

--PROMO_DLV_PAYMENT_STRATEGY table is replaced by PROMO_DLV_ZONE_STRATEGY. So dropping this table.
--DROP TABLE CUST.PROMO_DLV_PAYMENT_STRATEGY CASCADE CONSTRAINTS;

DROP TABLE CUST.PROMO_DELIVERY_DATES CASCADE CONSTRAINTS;

DROP TABLE CUST.PROMO_DLV_TIMESLOT CASCADE CONSTRAINTS;

DROP TABLE CUST.PROMO_DLV_ZONE_STRATEGY CASCADE CONSTRAINTS;

DROP TABLE CUST.PROMO_DCPD_DATA_NEW CASCADE CONSTRAINTS;

DROP TABLE CUST.PROMO_GEOGRAPHY_DATA_NEW CASCADE CONSTRAINTS;

DROP TABLE CUST.PROMO_GEOGRAPHY_NEW CASCADE CONSTRAINTS;

DROP TABLE CUST.PROMO_ATTR_NEW CASCADE CONSTRAINTS;

DROP TABLE CUST.PROMO_VARIANTS_NEW CASCADE CONSTRAINTS;

DROP TABLE CUST.PROMOTION_NEW CASCADE CONSTRAINTS;

DROP TABLE CUST.PROMO_CHANGE_DETAIL CASCADE CONSTRAINTS;

DROP TABLE CUST.PROMO_CHANGE CASCADE CONSTRAINTS;

DROP TABLE CUST.PUBLISH_LOG CASCADE CONSTRAINTS;

DROP TABLE CUST.PUBLISH_LOG_DETAIL CASCADE CONSTRAINTS;

DROP TYPE CUST.PROMO_DLV_ZONECODES;

DROP INDEX REDEM_CODE_IDX1;

-- CREATE A NEW CAMPAIGN TYPE 'HEADER'. Converging all different types of header level promotions into one type called 'HEADER'.
INSERT INTO CUST.CAMPAIGN VALUES ('HEADER','HEADER','All Header Level Promotions');

-- CREATE TABLE CUST.PROMOTION
CREATE TABLE CUST.PROMOTION_NEW
(
  ID                       VARCHAR2(16 BYTE)    NOT NULL,
  CODE                     VARCHAR2(16 BYTE)    NOT NULL,
  NAME                     VARCHAR2(32 BYTE)    NOT NULL,
  DESCRIPTION              VARCHAR2(256 BYTE)   NOT NULL,
  REDEMPTION_CODE          VARCHAR2(16 BYTE),
  START_DATE               DATE                 NOT NULL,
  EXPIRATION_DATE          DATE,
  ROLLING_EXPIRATION_DAYS  NUMBER(6),
  MAX_USAGE                NUMBER(3)            NOT NULL,
  CAMPAIGN_CODE            VARCHAR2(16 BYTE)    NOT NULL,
  PERCENT_OFF              NUMBER(6,5),
  MIN_SUBTOTAL             NUMBER(10,2),
  MAX_AMOUNT               NUMBER(10,2),
  WAIVE_CHARGE_TYPE        VARCHAR2(16 BYTE),
  STATUS	           VARCHAR2(16 BYTE),
  OFFER_DESC		   VARCHAR2(255 BYTE),
  AUDIENCE_DESC            VARCHAR2(255 BYTE),
  TERMS			   VARCHAR2(255 BYTE),
  REDEEM_CNT               NUMBER(6),
  HASSKUQUANTITY	   NUMBER(3),
  PERISHABLEONLY    CHAR(1),
  NEEDDRYGOODS	CHAR(1),
  NEEDCUSTOMERLIST CHAR(1)
);

CREATE INDEX CUST.REDEM_CODE_IDX1 ON CUST.PROMOTION_NEW
(UPPER("REDEMPTION_CODE"));

ALTER TABLE CUST.PROMOTION_NEW ADD (
  CONSTRAINT PK1_PROMOTION_NEW
 PRIMARY KEY
 (ID), UNIQUE (CODE), UNIQUE (NAME));

 ALTER TABLE CUST.PROMOTION_NEW ADD (
  CONSTRAINT PROMO_CAMP_FK1_NEW
 FOREIGN KEY (CAMPAIGN_CODE) 
 REFERENCES CUST.CAMPAIGN (CODE));


 ALTER TABLE CUST.PROMOTION_NEW ADD MODIFY_DATE DATE;
 
 ALTER TABLE CUST.PROMOTION_NEW ADD RULE_BASED VARCHAR2 (1);
 
 ALTER TABLE CUST.PROMOTION_NEW ADD FAVORITES_ONLY VARCHAR2 (1);
 
ALTER TABLE CUST.PROMOTION_NEW ADD COMBINE_OFFER VARCHAR2 (1);
 
 ALTER TABLE CUST.PROMOTION_NEW ADD CREATE_DATE DATE;
 ALTER TABLE CUST.PROMOTION_NEW ADD CREATED_BY VARCHAR2(80 BYTE);
 ALTER TABLE CUST.PROMOTION_NEW ADD MODIFIED_BY VARCHAR2(80 BYTE);
 ALTER TABLE CUST.PROMOTION_NEW ADD  CATEGORY_NAME VARCHAR2(40);
 ALTER TABLE CUST.PROMOTION_NEW ADD PRODUCT_NAME VARCHAR2(40);
 ALTER TABLE CUST.PROMOTION_NEW ADD PUBLISH_DATE DATE;
 ALTER TABLE CUST.PROMOTION_NEW ADD DONOT_APPLY_FRAUD CHAR(1);

 ALTER TABLE CUST.PROMOTION_NEW ADD EXTEND_DP_DAYS NUMBER(3);
 ALTER TABLE CUST.PROMOTION_NEW ADD EXCLUDE_SKU_SUBTOTAL VARCHAR2(500 byte);

ALTER TABLE CUST.PROMOTION_NEW MODIFY CODE VARCHAR2 (18);

 ALTER TABLE  CUST.PROMOTION_NEW ADD PROFILE_OPERATOR VARCHAR2(4);
 ALTER TABLE  CUST.PROMOTION_NEW ADD MAX_ITEM_COUNT NUMBER(4);
 ALTER TABLE  CUST.PROMOTION_NEW ADD ON_HOLD CHAR(1);
 ALTER TABLE  CUST.PROMOTION_NEW ADD OFFER_TYPE VARCHAR2(16);
 ALTER TABLE CUST.PROMOTION_NEW ADD PUBLISHES NUMBER(3) DEFAULT '0' NOT NULL;

 GRANT DELETE, INSERT, SELECT, UPDATE ON CUST.PROMOTION_NEW TO FDSTORE_PRDA;
 
 GRANT DELETE, INSERT, SELECT, UPDATE ON CUST.PROMOTION_NEW TO FDSTORE_PRDB;

-- MIGRATE DATA FROM CUST.PROMOTION TO CUST.PROMOTION_NEW
INSERT INTO CUST.PROMOTION_NEW(ID, CODE, NAME, DESCRIPTION, REDEMPTION_CODE, START_DATE, EXPIRATION_DATE, ROLLING_EXPIRATION_DAYS, MAX_USAGE,CAMPAIGN_CODE,PERCENT_OFF,MAX_AMOUNT,WAIVE_CHARGE_TYPE,NEEDDRYGOODS, MODIFY_DATE, RULE_BASED, FAVORITES_ONLY, COMBINE_OFFER,MODIFIED_BY,CREATE_DATE,CREATED_BY, CATEGORY_NAME, PRODUCT_NAME, DONOT_APPLY_FRAUD, PROFILE_OPERATOR, MAX_ITEM_COUNT, OFFER_TYPE, MIN_SUBTOTAL) SELECT ID, CODE, NAME, DESCRIPTION, REDEMPTION_CODE, START_DATE, EXPIRATION_DATE, ROLLING_EXPIRATION_DAYS, MAX_USAGE,CAMPAIGN_CODE,PERCENT_OFF,MAX_AMOUNT,WAIVE_CHARGE_TYPE, NEEDDRYGOODS,MODIFY_DATE, RULE_BASED, RECOMMENDED_ITEMS_ONLY, ALLOW_HEADER_DISCOUNT,MODIFIED_BY,MODIFY_DATE,MODIFIED_BY, CATEGORY_NAME, PRODUCT_NAME, DONOT_APPLY_FRAUD, PROFILE_OPERATOR, MAX_ITEM_COUNT, CAMPAIGN_CODE, MIN_SUBTOTAL FROM CUST.PROMOTION;	

UPDATE CUST.PROMOTION_NEW set status='LIVE' where id in(SELECT id from CUST.PROMOTION P where P.ACTIVE='X');

UPDATE CUST.PROMOTION_NEW set status='CANCELLED' where id in(SELECT id from CUST.PROMOTION P where P.ACTIVE  is null);

UPDATE CUST.PROMOTION_NEW set status='EXPIRED' where expiration_date < sysdate-7;

UPDATE CUST.PROMOTION_NEW set NEEDCUSTOMERLIST = 'X' where ID IN (SELECT PROMOTION_ID FROM CUST.PROMO_CUSTOMER);

UPDATE CUST.PROMOTION_NEW set OFFER_TYPE = 'GENERIC' where  OFFER_TYPE IN ('REDEMPTION');

UPDATE CUST.PROMOTION_NEW set OFFER_TYPE = 'LINE_ITEM' where OFFER_TYPE IN ('DCPD');

--Updating active gift card, redemption, window steering type promotions to type header.
UPDATE CUST.PROMOTION_NEW set CAMPAIGN_CODE = 'HEADER' where CAMPAIGN_CODE IN ('GIFT_CARD', 'REDEMPTION','WINDOW_STEERING');

--Updating active DCPD type promotions to LINE ITEM promotions.
UPDATE CUST.PROMOTION_NEW set CAMPAIGN_CODE = 'LINE_ITEM' where CAMPAIGN_CODE IN ('DCPD');

CREATE TABLE CUST.PROMO_ATTR_NEW
(
  ID               VARCHAR2(16 BYTE),
  PROMOTION_ID     VARCHAR2(16 BYTE)            NOT NULL,
  PROMO_ATTR_NAME  VARCHAR2(40 BYTE)            NOT NULL,
  ATTR_VALUE       VARCHAR2(64 BYTE)            NOT NULL,
  ATTR_INDEX       NUMBER(3)                    NOT NULL
)
TABLESPACE FDCUSDAT
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

CREATE UNIQUE INDEX CUST.PROMOATTR_PK_NEW ON CUST.PROMO_ATTR_NEW
(ID)
LOGGING
TABLESPACE FDCUSDAT
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;

ALTER TABLE CUST.PROMO_ATTR_NEW ADD (
  CONSTRAINT PROMOATTR_PK_NEW
 PRIMARY KEY
 (ID)
    USING INDEX 
    TABLESPACE FDCUSDAT
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
               ));
               
ALTER TABLE CUST.PROMO_ATTR_NEW ADD (
  CONSTRAINT PROMO_ATTR_FK_NEW 
 FOREIGN KEY (PROMOTION_ID) 
 REFERENCES CUST.PROMOTION_NEW (ID),
  CONSTRAINT PROMO_ATTR_NAME_FK_NEW 
 FOREIGN KEY (PROMO_ATTR_NAME) 
 REFERENCES CUST.PROFILE_ATTR_NAME (NAME));
 
 GRANT DELETE, INSERT, SELECT, UPDATE ON CUST.PROMO_ATTR_NEW TO FDSTORE_PRDA;
 
 GRANT DELETE, INSERT, SELECT, UPDATE ON CUST.PROMO_ATTR_NEW TO FDSTORE_PRDB;
 
 -- MIGRATE DATA FROM CUST.PROMO_ATTR TO CUST.PROMO_ATTR_NEW
 INSERT INTO CUST.PROMO_ATTR_NEW SELECT * FROM CUST.PROMO_ATTR;
 
CREATE TABLE CUST.PROMO_DCPD_DATA_NEW
(
  ID            VARCHAR2(16 BYTE),
  PROMOTION_ID  VARCHAR2(16 BYTE)               NOT NULL,
  CONTENT_TYPE  VARCHAR2(40 BYTE)               NOT NULL,
  CONTENT_ID    VARCHAR2(40 BYTE)               NOT NULL
)
TABLESPACE FDCUSDAT
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE UNIQUE INDEX CUST.GRPDISCOUNT_PK_NEW ON CUST.PROMO_DCPD_DATA_NEW
(ID)
LOGGING
TABLESPACE FDCUSDAT
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


ALTER TABLE CUST.PROMO_DCPD_DATA_NEW ADD (
  CONSTRAINT GRPDISCOUNT_PK_NEW
 PRIMARY KEY
 (ID)
    USING INDEX 
    TABLESPACE FDCUSDAT
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
               ));

ALTER TABLE CUST.PROMO_DCPD_DATA_NEW ADD (
  CONSTRAINT PROMO_GRPDISCOUNT_FK_NEW
 FOREIGN KEY (PROMOTION_ID) 
 REFERENCES CUST.PROMOTION_NEW (ID));

ALTER TABLE  CUST.PROMO_DCPD_DATA_NEW ADD  EXCLUDE  CHAR(1 BYTE);

 -- MIGRATE DATA FROM CUST.PROMO_DCPD_DATA TO CUST.PROMO_DCPD_DATA_NEW
insert into CUST.PROMO_DCPD_DATA_NEW
SELECT id, promotion_id, content_type, content_id, null FROM CUST.PROMO_DCPD_DATA;



GRANT DELETE, INSERT, SELECT, UPDATE ON CUST.PROMO_DCPD_DATA_NEW TO FDSTORE_PRDA;

GRANT DELETE, INSERT, SELECT, UPDATE ON CUST.PROMO_DCPD_DATA_NEW TO FDSTORE_PRDB;


CREATE TABLE CUST.PROMO_GEOGRAPHY_NEW
(
  ID            VARCHAR2(16 BYTE)               NOT NULL,
  PROMOTION_ID  VARCHAR2(16 BYTE)               NOT NULL,
  START_DATE    DATE                            NOT NULL
)
TABLESPACE FDCUSDAT
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE UNIQUE INDEX CUST.PK_FLIGHT_NEW ON CUST.PROMO_GEOGRAPHY_NEW
(ID)
LOGGING
TABLESPACE FDCUSDAT
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


ALTER TABLE CUST.PROMO_GEOGRAPHY_NEW ADD (
  CONSTRAINT PK_FLIGHT_NEW
 PRIMARY KEY
 (ID)
    USING INDEX 
    TABLESPACE FDCUSDAT
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
               ));

ALTER TABLE CUST.PROMO_GEOGRAPHY_NEW ADD (
  CONSTRAINT PGEO_PROMO_FK_NEW
 FOREIGN KEY (PROMOTION_ID) 
 REFERENCES CUST.PROMOTION_NEW (ID));

GRANT DELETE, INSERT, SELECT, UPDATE ON CUST.PROMO_GEOGRAPHY_NEW TO FDSTORE_PRDA;

GRANT DELETE, INSERT, SELECT, UPDATE ON CUST.PROMO_GEOGRAPHY_NEW TO FDSTORE_PRDB;

 -- MIGRATE DATA FROM CUST.PROMO_GEOGRAPHY TO CUST.PROMO_GEOGRAPHY_NEW
 INSERT INTO CUST.PROMO_GEOGRAPHY_NEW SELECT * FROM CUST.PROMO_GEOGRAPHY;

CREATE TABLE CUST.PROMO_GEOGRAPHY_DATA_NEW
(
  GEOGRAPHY_ID  VARCHAR2(16 BYTE)               NOT NULL,
  TYPE          CHAR(1 BYTE)                    NOT NULL,
  CODE          VARCHAR2(20 BYTE)               NOT NULL,
  SIGN          CHAR(1 BYTE)                    NOT NULL
)
TABLESPACE FDCUSDAT
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


ALTER TABLE CUST.PROMO_GEOGRAPHY_DATA_NEW ADD (
  CONSTRAINT PGEODATA_PGEO_FK_NEW
 FOREIGN KEY (GEOGRAPHY_ID) 
 REFERENCES CUST.PROMO_GEOGRAPHY_NEW (ID));

GRANT DELETE, INSERT, SELECT, UPDATE ON CUST.PROMO_GEOGRAPHY_DATA_NEW TO FDSTORE_PRDA;

GRANT DELETE, INSERT, SELECT, UPDATE ON CUST.PROMO_GEOGRAPHY_DATA_NEW TO FDSTORE_PRDB;

-- MIGRATE DATA FROM CUST.PROMO_GEOGRAPHY_DATA TO CUST.PROMO_GEOGRAPHY_DATA_NEW
 INSERT INTO CUST.PROMO_GEOGRAPHY_DATA_NEW SELECT * FROM CUST.PROMO_GEOGRAPHY_DATA;

CREATE TABLE CUST.PROMO_VARIANTS_NEW
(
  VARIANT_ID        VARCHAR2(32 BYTE)           NOT NULL,
  PROMO_CODE        VARCHAR2(16 BYTE)           NOT NULL,
  PROMO_PRIORITY    NUMBER(5),
  VARIANT_PRIORITY  NUMBER(5),
  CREATE_DATE       DATE
)
TABLESPACE FDCUSDAT
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

CREATE UNIQUE INDEX CUST.PROMO_VARIANTS_PK_NEW ON CUST.PROMO_VARIANTS_NEW
(VARIANT_ID, PROMO_CODE)
LOGGING
TABLESPACE FDCUSDAT
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


ALTER TABLE CUST.PROMO_VARIANTS_NEW ADD (
  CONSTRAINT PROMO_VARIANTS_PK_NEW
 PRIMARY KEY
 (VARIANT_ID, PROMO_CODE)
    USING INDEX 
    TABLESPACE FDCUSDAT
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
               ));

ALTER TABLE CUST.PROMO_VARIANTS_NEW ADD (
  CONSTRAINT PROMO_VARIANTS_FK_01_NEW 
 FOREIGN KEY (VARIANT_ID) 
 REFERENCES CUST.SS_VARIANTS (ID),
  CONSTRAINT PROMO_VARIANTS_FK_02_NEW
 FOREIGN KEY (PROMO_CODE) 
 REFERENCES CUST.PROMOTION_NEW (CODE));


GRANT SELECT ON CUST.PROMO_VARIANTS_NEW TO FDSTORE_PRDA;

GRANT SELECT ON CUST.PROMO_VARIANTS_NEW TO FDSTORE_PRDB;

-- MIGRATE DATA FROM CUST.PROMO_VARIANTS TO CUST.PROMO_VARIANTS_NEW
 INSERT INTO CUST.PROMO_VARIANTS_NEW SELECT VARIANT_ID, PROMO_CODE, PROMO_PRIORITY, VARIANT_PRIORITY, CREATE_DATE FROM CUST.PROMO_VARIANTS;

-- CREATE TABLE CUST.PROMO_CART_STRATEGY
CREATE TABLE CUST.PROMO_CART_STRATEGY
(
  ID            VARCHAR2(16 BYTE),
  PROMOTION_ID  VARCHAR2(16 BYTE)               NOT NULL,
  CONTENT_TYPE  VARCHAR2(40 BYTE)               NOT NULL,
  CONTENT_ID    VARCHAR2(40 BYTE)               NOT NULL
);

ALTER TABLE CUST.PROMO_CART_STRATEGY ADD (
  CONSTRAINT PRMCRTSTRTGY_PK
 PRIMARY KEY
 (ID));

ALTER TABLE CUST.PROMO_CART_STRATEGY ADD (
  CONSTRAINT PROMO_CRTSTRTGY_FK 
 FOREIGN KEY (PROMOTION_ID) 
 REFERENCES CUST.PROMOTION_NEW (ID));

GRANT DELETE, INSERT, SELECT, UPDATE ON CUST.PROMO_CART_STRATEGY TO FDSTORE_PRDA;

GRANT DELETE, INSERT, SELECT, UPDATE ON CUST.PROMO_CART_STRATEGY TO FDSTORE_PRDB;

--TBD - Is it required to move NEEDITEMSFROM, NEEDBRANDS column data to this table?

-- CREATE TABLE CUST.PROMO_CUST_STRATEGY
CREATE TABLE CUST.PROMO_CUST_STRATEGY
(
  ID            VARCHAR2(16 BYTE),
  PROMOTION_ID  VARCHAR2(16 BYTE)               NOT NULL,
  ORDER_RANGE_START NUMBER(6),
  ORDER_RANGE_END   NUMBER(6),
  COHORT        VARCHAR2(200),
  DP_STATUS         VARCHAR2(5 BYTE),
  DP_EXP_START      DATE,
  DP_EXP_END	    DATE,
  PAYMENT_TYPE	     VARCHAR2(100),
  PRIOR_ECHECK_USE   NUMBER(5),
  ORDERTYPE_HOME   CHAR(1 BYTE),
  ORDERTYPE_PICKUP  CHAR(1 BYTE),
  ORDERTYPE_CORPORATE CHAR(1 BYTE),
  EXCLUDE_SAMEDAY_DELIVERY CHAR(1 BYTE)
);

ALTER TABLE CUST.PROMO_CUST_STRATEGY ADD (
  CONSTRAINT PRM_CUSTSTRTGY_PK
 PRIMARY KEY
 (ID));


 ALTER TABLE CUST.PROMO_CUST_STRATEGY ADD (
  CONSTRAINT PROMO_CUSTSTRTGY_FK 
 FOREIGN KEY (PROMOTION_ID) 
 REFERENCES CUST.PROMOTION_NEW (ID));

GRANT DELETE, INSERT, SELECT, UPDATE ON CUST.PROMO_CUST_STRATEGY TO FDSTORE_PRDA;

GRANT DELETE, INSERT, SELECT, UPDATE ON CUST.PROMO_CUST_STRATEGY TO FDSTORE_PRDB;

-- MIGRATE DATA FROM CUST.PROMOTION.ORDERCOUNT,CUST.PROMOTION.ORDERTYPE_HOME,ORDERTYPE_PICKUP,ORDERTYPE_CORPORATE TO CUST.PROMO_CUST_STRATEGY
INSERT INTO CUST.PROMO_CUST_STRATEGY (ID,PROMOTION_ID, ORDER_RANGE_START, ORDER_RANGE_END, COHORT, ORDERTYPE_HOME,ORDERTYPE_PICKUP,ORDERTYPE_CORPORATE)  
SELECT SYSTEM_SEQ.nextval, ID, NVL(ORDERCOUNT + 1, NULL) , NVL(ORDERCOUNT + 1, NULL), NULL, ORDERTYPE_HOME, ORDERTYPE_PICKUP, ORDERTYPE_CORPORATE FROM CUST.PROMOTION 
WHERE 
TRIM(ORDERCOUNT) IS NOT NULL
OR
ORDERTYPE_HOME IS NOT NULL
OR 
ORDERTYPE_PICKUP IS NOT NULL
OR
ORDERTYPE_CORPORATE IS NOT NULL;

-- CREATE TYPE CUST.PROMO_DLV_ZONECODES
CREATE OR REPLACE TYPE CUST.PROMO_DLV_ZONECODES AS VARRAY(1000) OF varchar2(5);

GRANT EXECUTE ON CUST.PROMO_DLV_ZONECODES TO FDSTORE_PRDA;

GRANT EXECUTE ON CUST.PROMO_DLV_ZONECODES TO FDSTORE_PRDB;


-- CREATE TABLE CUST.PROMO_CHANGE
CREATE TABLE CUST.PROMO_CHANGE
(
    ID            VARCHAR2(16 BYTE)    NOT NULL,
    PROMOTION_ID  VARCHAR2(16 BYTE)    NOT NULL,
    USER_ID       VARCHAR2(80 BYTE),
    ACTION_DATE   DATE,
    ACTION_TYPE   VARCHAR2(16 BYTE)
);

ALTER TABLE CUST.PROMO_CHANGE ADD (
  CONSTRAINT PROMO_CHANGE_PK
 PRIMARY KEY
 (ID));
 
GRANT DELETE, INSERT, SELECT, UPDATE ON CUST.PROMO_CHANGE TO FDSTORE_PRDA;

GRANT DELETE, INSERT, SELECT, UPDATE ON CUST.PROMO_CHANGE TO FDSTORE_PRDB;


-- CREATE TABLE CUST.PROMO_CHANGE_DETAIL
CREATE TABLE CUST.PROMO_CHANGE_DETAIL
(
    ID            VARCHAR2(16 BYTE)    NOT NULL,
    CHANGE_ID     VARCHAR2(16 BYTE)    NOT NULL,
    SECTION_ID     VARCHAR2(55 BYTE)    NOT NULL,
    CHANGE_FIELD  VARCHAR2(80 BYTE)    NOT NULL,
    OLD_VALUE     VARCHAR2(255 BYTE),
    NEW_VALUE     VARCHAR2(255 BYTE)
);

ALTER TABLE CUST.PROMO_CHANGE_DETAIL ADD (
  CONSTRAINT PROMO_CHANGE_DETAIL_PK
 PRIMARY KEY
 (ID));

 ALTER TABLE CUST.PROMO_CHANGE_DETAIL ADD (
  CONSTRAINT PROMO_CHANGE_DETAIL_FK 
 FOREIGN KEY (CHANGE_ID) 
 REFERENCES CUST.PROMO_CHANGE (ID));

GRANT DELETE, INSERT, SELECT, UPDATE ON CUST.PROMO_CHANGE_DETAIL TO FDSTORE_PRDA;

GRANT DELETE, INSERT, SELECT, UPDATE ON CUST.PROMO_CHANGE_DETAIL TO FDSTORE_PRDB;

-- CREATE TABLE PROMO_DELIVERY_DATES
CREATE TABLE CUST.PROMO_DELIVERY_DATES
(
   ID            VARCHAR2(16 BYTE)    NOT NULL,
   PROMOTION_ID  VARCHAR2(16 BYTE)    NOT NULL,
   START_DATE    DATE,
   END_DATE      DATE
);

ALTER TABLE CUST.PROMO_DELIVERY_DATES ADD (
  CONSTRAINT PROMO_DELIVERY_DATES_PK
 PRIMARY KEY
 (ID));

 ALTER TABLE CUST.PROMO_DELIVERY_DATES ADD (
  CONSTRAINT PROMO_DELIVERY_DATES_FK 
 FOREIGN KEY (PROMOTION_ID) 
 REFERENCES CUST.PROMOTION_NEW (ID));

 GRANT DELETE, INSERT, SELECT, UPDATE ON CUST.PROMO_DELIVERY_DATES TO FDSTORE_PRDA;

 GRANT DELETE, INSERT, SELECT, UPDATE ON CUST.PROMO_DELIVERY_DATES TO FDSTORE_PRDB;


 -- CREATE TABLE CUST.PROMO_DLV_ZONE_STRATEGY
CREATE TABLE CUST.PROMO_DLV_ZONE_STRATEGY
(
  ID            VARCHAR2(16 BYTE)               NOT NULL,              
  PROMOTION_ID  VARCHAR2(16 BYTE)               NOT NULL, 
  DLV_DAYS	     VARCHAR2(10 BYTE),
  DLV_ZONE	     PROMO_DLV_ZONECODES
);

ALTER TABLE CUST.PROMO_DLV_ZONE_STRATEGY ADD (
  CONSTRAINT PROMO_DLV_ZONE_STRATEGY_PK
 PRIMARY KEY
 (ID));


 ALTER TABLE CUST.PROMO_DLV_ZONE_STRATEGY ADD (
  CONSTRAINT PROMO_DLV_ZONE_STRATEGY_FK 
 FOREIGN KEY (PROMOTION_ID) 
 REFERENCES CUST.PROMOTION_NEW (ID));

GRANT DELETE, INSERT, SELECT, UPDATE ON CUST.PROMO_DLV_ZONE_STRATEGY TO FDSTORE_PRDA;

GRANT DELETE, INSERT, SELECT, UPDATE ON CUST.PROMO_DLV_ZONE_STRATEGY TO FDSTORE_PRDB;

-- CREATE TABLE CUST.PROMO_DLV_TIMESLOT
CREATE TABLE CUST.PROMO_DLV_TIMESLOT
(
  ID                 VARCHAR2(16 BYTE)               NOT NULL,
  PROMO_DLV_ZONE_ID  VARCHAR2(16 BYTE)               NOT NULL, 
  DAY_ID             NUMBER(1)                       NOT NULL, 
  START_TIME         VARCHAR2(15 BYTE),
  END_TIME           VARCHAR2(15 BYTE)
);

ALTER TABLE CUST.PROMO_DLV_TIMESLOT ADD (
  CONSTRAINT PROMO_DLV_TIMESLOT_PK
 PRIMARY KEY
 (ID));

 ALTER TABLE CUST.PROMO_DLV_TIMESLOT ADD (
  CONSTRAINT PROMO_DLV_TIMESLOT_FK 
 FOREIGN KEY (PROMO_DLV_ZONE_ID) 
 REFERENCES CUST.PROMO_DLV_ZONE_STRATEGY (ID));

 GRANT DELETE, INSERT, SELECT, UPDATE ON CUST.PROMO_DLV_TIMESLOT TO FDSTORE_PRDA;

 GRANT DELETE, INSERT, SELECT, UPDATE ON CUST.PROMO_DLV_TIMESLOT TO FDSTORE_PRDB;


--
-- === PUBLISH LOG TABLES ===
--
CREATE TABLE CUST.PUBLISH_LOG
(
	ID						VARCHAR2(16 BYTE)	NOT NULL,
	AGENT_ID			VARCHAR2(16 BYTE) NOT NULL,
	START_DATE		TIMESTAMP,
	END_DATE			TIMESTAMP,
	DEST_URL			VARCHAR2(255 BYTE)
);
ALTER TABLE CUST.PUBLISH_LOG ADD (
	CONSTRAINT PUBLISH_LOG_PK
	PRIMARY KEY (ID)
);

GRANT DELETE, INSERT, SELECT, UPDATE ON CUST.PUBLISH_LOG TO FDSTORE_PRDA;
GRANT DELETE, INSERT, SELECT, UPDATE ON CUST.PUBLISH_LOG TO FDSTORE_PRDB;





CREATE TABLE CUST.PUBLISH_LOG_DETAIL
(
	ID								VARCHAR2(16 BYTE)	NOT NULL,
	PUBLISH_ID				VARCHAR2(16 BYTE)	NOT NULL,
	PROMOTION_CODE		VARCHAR2(16 BYTE) NOT NULL,
	CHANGE_ID					VARCHAR2(16 BYTE),
	PUBLISH_STATUS		VARCHAR2(16 BYTE)	NOT NULL,
	PROMO_STATUS_PRE	VARCHAR2(16 BYTE)	NOT NULL,
	PROMO_STATUS_POST	VARCHAR2(16 BYTE)	NOT NULL
);
ALTER TABLE CUST.PUBLISH_LOG_DETAIL ADD (
	CONSTRAINT PUBLISH_LOG_DTL_PK
	PRIMARY KEY (ID)
);

GRANT DELETE, INSERT, SELECT, UPDATE ON CUST.PUBLISH_LOG_DETAIL TO FDSTORE_PRDA;
GRANT DELETE, INSERT, SELECT, UPDATE ON CUST.PUBLISH_LOG_DETAIL TO FDSTORE_PRDB;

ALTER TABLE CUST.PROMOTION_NEW ADD GEO_RESTRICTION_TYPE varchar2(4 byte);

--DROP and recreate FK constraints for transaction tables
ALTER TABLE CUST.PROMOTION_PARTICIPATION DROP CONSTRAINT PPT_PMO_FK; 

ALTER TABLE CUST.PROMOTION_PARTICIPATION ADD (CONSTRAINT PPT_PMO_FK FOREIGN KEY (PROMOTION_ID) REFERENCES CUST.PROMOTION_NEW (ID));

ALTER TABLE CUST.PROMO_CUSTOMER DROP CONSTRAINT CUST_PROMO_PROMO_FK; 

ALTER TABLE CUST.PROMO_CUSTOMER ADD (CONSTRAINT CUST_PROMO_PROMO_FK FOREIGN KEY (PROMOTION_ID) REFERENCES CUST.PROMOTION_NEW (ID));
