-- CREATE TABLE CUST.PROMO_CART_STRATEGY
CREATE TABLE CUST.PROMO_CART_STRATEGY
(
  ID            VARCHAR2(16 BYTE),
  PROMOTION_ID  VARCHAR2(16 BYTE)               NOT NULL,
  CONTENT_TYPE  VARCHAR2(40 BYTE)               NOT NULL,
  CONTENT_ID    VARCHAR2(40 BYTE)               NOT NULL
);

ALTER TABLE CUST.PROMO_CART_STRATEGY ADD (
  CONSTRAINT PRMCRTSTRTGY_PK
 PRIMARY KEY
 (ID));

ALTER TABLE CUST.PROMO_CART_STRATEGY ADD (
  CONSTRAINT PROMO_CRTSTRTGY_FK 
 FOREIGN KEY (PROMOTION_ID) 
 REFERENCES CUST.PROMOTION (ID));

GRANT DELETE, INSERT, SELECT, UPDATE ON CUST.PROMO_CART_STRATEGY TO FDSTORE_PRDA;

-- CREATE TYPE CUST.PROMO_COHORTS
CREATE OR REPLACE TYPE CUST.PROMO_COHORTS AS VARRAY(1000)  OF varchar2(5);

-- CREATE TABLE CUST.PROMO_CUST_STRATEGY
CREATE TABLE CUST.PROMO_CUST_STRATEGY
(
  ID            VARCHAR2(16 BYTE),
  PROMOTION_ID  VARCHAR2(16 BYTE)               NOT NULL,
  ORDER_RANGE_START DATE,
  ORDER_RANGE_END   DATE,
  COHORT        PROMO_COHORTS,
  DP_STATUS         VARCHAR2(5 BYTE)           NOT NULL,
  DP_EXP_START      DATE,
  DP_EXP_END	    DATE
);

ALTER TABLE CUST.PROMO_CUST_STRATEGY ADD (
  CONSTRAINT PRM_CUSTSTRTGY_PK
 PRIMARY KEY
 (ID));


 ALTER TABLE CUST.PROMO_CUST_STRATEGY ADD (
  CONSTRAINT PROMO_CUSTSTRTGY_FK 
 FOREIGN KEY (PROMOTION_ID) 
 REFERENCES CUST.PROMOTION (ID));

GRANT DELETE, INSERT, SELECT, UPDATE ON CUST.PROMO_CUST_STRATEGY TO FDSTORE_PRDA;

-- CREATE TYPE CUST.PROMO_DLV_ZONECODES
CREATE OR REPLACE TYPE CUST.PROMO_DLV_ZONECODES AS VARRAY(1000)  OF varchar2(5);

-- CREATE TABLE CUST.PROMO_DLV_PAYMENT_STRATEGY
CREATE TABLE CUST.PROMO_DLV_PAYMENT_STRATEGY
(
  ID            VARCHAR2(16 BYTE),
  PROMOTION_ID  VARCHAR2(16 BYTE)               NOT NULL,
  ORDERTYPE_HOME   CHAR(1 BYTE),
  ORDERTYPE_PICKUP  CHAR(1 BYTE),
  ORDERTYPE_CORPORATE CHAR(1 BYTE),
  DLV_DAY	     VARCHAR2(10 BYTE),
  DLV_DATE_START     DATE,
  DLV_DATE_END       DATE,
  DLV_TIME_START     VARCHAR2(15 BYTE),
  DLV_TIME_END       VARCHAR2(15 BYTE),
  DLV_ZONE	     PROMO_DLV_ZONECODES,
  PAYMENT_TYPE	     VARCHAR2(5 BYTE),
  PRIOR_ECHECK_USE   CHAR(1 BYTE)
);

ALTER TABLE CUST.PROMO_DLV_PAYMENT_STRATEGY ADD (
  CONSTRAINT PRM_DLV_PYMNT_STRTGY_PK
 PRIMARY KEY
 (ID));


 ALTER TABLE CUST.PROMO_DLV_PAYMENT_STRATEGY ADD (
  CONSTRAINT PROMO_DLV_PYMNT_STRTGY_FK 
 FOREIGN KEY (PROMOTION_ID) 
 REFERENCES CUST.PROMOTION (ID));

GRANT DELETE, INSERT, SELECT, UPDATE ON CUST.PROMO_DLV_PAYMENT_STRATEGY TO FDSTORE_PRDA;

-- ALTER TABLE  CUST.PROMO_DCPD_DATA
ALTER TABLE  CUST.PROMO_DCPD_DATA ADD  EXCLUDE  CHAR(1 BYTE);

-- DISABLE CONSTRAINTS BEFORE RENAMING THE 'CUST.PROMOTION' TABLE
ALTER TABLE CUST.PROMOTION_PARTICIPATION DISABLE CONSTRAINT PPT_PMO_FK;
ALTER TABLE CUST.PROMO_ATTR DISABLE CONSTRAINT PROMO_ATTR_FK;
ALTER TABLE CUST.PROMO_CART_STRATEGY DISABLE CONSTRAINT PROMO_CRTSTRTGY_FK;
ALTER TABLE CUST.PROMO_CUSTOMER DISABLE CONSTRAINT CUST_PROMO_PROMO_FK;
ALTER TABLE CUST.PROMO_CUST_STRATEGY DISABLE CONSTRAINT PROMO_CUSTSTRTGY_FK;
ALTER TABLE CUST.PROMO_DCPD_DATA DISABLE CONSTRAINT PROMO_GRPDISCOUNT_FK;
ALTER TABLE CUST.PROMO_DLV_PAYMENT_STRATEGY DISABLE CONSTRAINT PROMO_DLV_PYMNT_STRTGY_FK;
ALTER TABLE CUST.PROMO_GEOGRAPHY DISABLE CONSTRAINT PGEO_PROMO_FK;
ALTER TABLE CUST.PROMO_VARIANTS DISABLE CONSTRAINT PROMO_VARIANTS_FK_2;
ALTER TABLE CUST.REF_PROGRAM DISABLE CONSTRAINT REF_PROGRAM_PROMOTION_FK;

-- RENAME THE TABLE
ALTER TABLE CUST.PROMOTION RENAME TO PROMOTION_OLD;

-- CREATE TABLE CUST.PROMOTION
CREATE TABLE CUST.PROMOTION
(
  ID                       VARCHAR2(16 BYTE)    NOT NULL,
  CODE                     VARCHAR2(16 BYTE)    NOT NULL,
  NAME                     VARCHAR2(32 BYTE)    NOT NULL,
  DESCRIPTION              VARCHAR2(256 BYTE)   NOT NULL,
  REDEMPTION_CODE          VARCHAR2(16 BYTE),
  START_DATE               DATE                 NOT NULL,
  EXPIRATION_DATE          DATE,
  ROLLING_EXPIRATION_DAYS  NUMBER(6),
  MAX_USAGE                NUMBER(3)            NOT NULL,
  CAMPAIGN_CODE            VARCHAR2(16 BYTE)    NOT NULL,
  PERCENT_OFF              NUMBER(6,5),
  MIN_SUBTOTAL             NUMBER(10,2),
  MAX_AMOUNT               NUMBER(10,2),
  WAIVE_CHARGE_TYPE        VARCHAR2(16 BYTE),
  STATUS	           VARCHAR2(16 BYTE),
  OFFER_DESC		   VARCHAR2(255 BYTE),
  AUDIENCE_DESC            VARCHAR2(255 BYTE),
  TERMS			   VARCHAR2(255 BYTE),
  REDEEM_CNT               NUMBER(3),
  HASSKUQUANTITY	   NUMBER(3)
);

CREATE UNIQUE INDEX CUST.REDEM_CODE_IDX1 ON CUST.PROMOTION
(UPPER("REDEMPTION_CODE"));

ALTER TABLE CUST.PROMOTION ADD (
  CONSTRAINT PK1_PROMOTION
 PRIMARY KEY
 (ID), UNIQUE (CODE), UNIQUE (NAME));

 ALTER TABLE CUST.PROMOTION ADD (
  CONSTRAINT PROMO_CAMP_FK1
 FOREIGN KEY (CAMPAIGN_CODE) 
 REFERENCES CUST.CAMPAIGN (CODE));

 GRANT DELETE, INSERT, SELECT, UPDATE ON CUST.PROMOTION TO FDSTORE_PRDA;

-- MIGRATE THE DATE FROM CUST.PROMOTION_OLD TO CUST.PROMOTION
INSERT INTO CUST.PROMOTION(ID, CODE, NAME, DESCRIPTION, REDEMPTION_CODE, START_DATE, EXPIRATION_DATE, ROLLING_EXPIRATION_DAYS, MAX_USAGE,CAMPAIGN_CODE,PERCENT_OFF,MAX_AMOUNT,WAIVE_CHARGE_TYPE) SELECT ID, CODE, NAME, DESCRIPTION, REDEMPTION_CODE, START_DATE, EXPIRATION_DATE, ROLLING_EXPIRATION_DAYS, MAX_USAGE,CAMPAIGN_CODE,PERCENT_OFF,MAX_AMOUNT,WAIVE_CHARGE_TYPE FROM CUST.PROMOTION_OLD;
UPDATE CUST.PROMOTION set status='LIVE' where id in(SELECT id from CUST.PROMOTION_OLD p where P.ACTIVE='X');
UPDATE CUST.PROMOTION set status='CANCELLED' where id in(SELECT id from CUST.PROMOTION_OLD p where P.ACTIVE  is null);
UPDATE CUST.PROMOTION set status='EXPIRED' where expiration_date < sysdate-7;
UPDATE CUST.PROMOTION p set AUDIENCE_DESC = (select notes from CUST.PROMOTION_OLD where id =p.id);

-- ENABLING ALL THE DEPENDENT CONSTRAINTS ON CUST.PROMOTION TABLE
ALTER TABLE CUST.PROMOTION_PARTICIPATION ENABLE CONSTRAINT PPT_PMO_FK;
ALTER TABLE CUST.PROMO_ATTR ENABLE CONSTRAINT PROMO_ATTR_FK;
ALTER TABLE CUST.PROMO_CART_STRATEGY ENABLE CONSTRAINT PROMO_CRTSTRTGY_FK;
ALTER TABLE CUST.PROMO_CUSTOMER ENABLE CONSTRAINT CUST_PROMO_PROMO_FK;
ALTER TABLE CUST.PROMO_CUST_STRATEGY ENABLE CONSTRAINT PROMO_CUSTSTRTGY_FK;
ALTER TABLE CUST.PROMO_DCPD_DATA ENABLE CONSTRAINT PROMO_GRPDISCOUNT_FK;
ALTER TABLE CUST.PROMO_DLV_PAYMENT_STRATEGY ENABLE CONSTRAINT PROMO_DLV_PYMNT_STRTGY_FK;
ALTER TABLE CUST.PROMO_GEOGRAPHY ENABLE CONSTRAINT PGEO_PROMO_FK;
ALTER TABLE CUST.PROMO_VARIANTS ENABLE CONSTRAINT PROMO_VARIANTS_FK_2;
ALTER TABLE CUST.REF_PROGRAM ENABLE CONSTRAINT REF_PROGRAM_PROMOTION_FK;


-- CREATE TABLE CUST.PROMO_CHANGE
CREATE TABLE CUST.PROMO_CHANGE
(
    ID            VARCHAR2(16 BYTE)    NOT NULL,
    PROMOTION_ID  VARCHAR2(16 BYTE)    NOT NULL,
    USER_ID       VARCHAR2(80 BYTE),
    ACTION_DATE   DATE,
    ACTION_TYPE   VARCHAR2(16 BYTE)
);

ALTER TABLE CUST.PROMO_CHANGE ADD (
  CONSTRAINT PROMO_CHANGE_PK
 PRIMARY KEY
 (ID));

-- CREATE TABLE CUST.PROMO_CHANGE_DETAIL
CREATE TABLE CUST.PROMO_CHANGE_DETAIL
(
    ID            VARCHAR2(16 BYTE)    NOT NULL,
    CHANGE_ID     VARCHAR2(16 BYTE)    NOT NULL,
    CHANGE_FIELD  VARCHAR2(80 BYTE)    NOT NULL,
    OLD_VALUE     VARCHAR2(255 BYTE)    NOT NULL,
    NEW_VALUE     VARCHAR2(255 BYTE)    NOT NULL
);

ALTER TABLE CUST.PROMO_CHANGE_DETAIL ADD (
  CONSTRAINT PROMO_CHANGE_DETAIL_PK
 PRIMARY KEY
 (ID));

 ALTER TABLE CUST.PROMO_CHANGE_DETAIL ADD (
  CONSTRAINT PROMO_CHANGE_DETAIL_FK 
 FOREIGN KEY (CHANGE_ID) 
 REFERENCES CUST.PROMO_CHANGE (ID));