CREATE OR REPLACE PROCEDURE DLV."RESOURCE_CRON" (ZONE_CODE_IN IN VARCHAR2, ZONE_ID_IN VARCHAR2, IS_DYNAMIC_IN VARCHAR2) 
    IS 
     BEGIN 
      DECLARE 

      CURSOR RESOURCE_CUR(DAY_IN DELIVERY_RESOURCE.DAY%TYPE) IS 
        SELECT * FROM DLV.DELIVERY_RESOURCE 
       WHERE DAY = DAY_IN AND ZONE_CODE = ZONE_CODE_IN; 

      CURSOR TIMESLOT_CUR (RESOURCE_ID_IN TIMESLOT.RESOURCE_ID%TYPE) IS 
        SELECT ZONE_ID, CAPACITY, BASE_DATE, START_TIME, END_TIME, CUTOFF_TIME, TRAFFIC_FACTOR, PLANNED_CAPACITY, STATUS, CT_CAPACITY, 
        PREMIUM_CUTOFF_TIME, PREMIUM_CAPACITY, PREMIUM_CT_CAPACITY, ROUTING_START_TIME, ROUTING_END_TIME, 
        MOD_START_X, MOD_CUTOFF_Y, DISPLAY_DATE, DISPLAY_TIME,IS_PRIMARY,SERVICE_TYPE 
        FROM DLV.TIMESLOT 
        WHERE RESOURCE_ID = RESOURCE_ID_IN; 

      CURSOR SEQUENCE_CUR IS 
        SELECT SYSTEM_SEQ.NEXTVAL FROM DUAL; 

      BASE_DATE DATE; 
      RESOURCE_ID VARCHAR2(16); 
      RESOURCE_REC DELIVERY_RESOURCE%ROWTYPE; 
      TIMESLOT_REC TIMESLOT_CUR%ROWTYPE; 

      BEGIN 
        BASE_DATE := TO_DATE(TO_CHAR(SYSDATE+7, 'MM/DD/YY'), 'MM/DD/YY'); 


        IF NOT RESOURCE_CUR%ISOPEN 
        THEN 
           OPEN RESOURCE_CUR(BASE_DATE); 
        END IF; 

        FETCH RESOURCE_CUR INTO RESOURCE_REC; 
        IF RESOURCE_CUR%NOTFOUND 
        THEN 
           IF RESOURCE_CUR%ISOPEN 
         THEN 
        CLOSE RESOURCE_CUR; 
        RESOURCE_REC := NULL; 
         END IF; 
         DBMS_OUTPUT.PUT_LINE('NO RESOURCE WAS FOUND FOR '||TO_CHAR(BASE_DATE, 'DAY MM/DD/YYYY')); 

         IF NOT RESOURCE_CUR%ISOPEN 
         THEN 
            OPEN RESOURCE_CUR(TO_DATE(TO_CHAR(SYSDATE, 'MM/DD/YY'), 'MM/DD/YY')); 
         END IF; 
         FETCH RESOURCE_CUR INTO RESOURCE_REC; 
         WHILE RESOURCE_CUR%FOUND 
         LOOP 
            DBMS_OUTPUT.PUT_LINE('NOW WORKING DATE IS '|| RESOURCE_REC.DAY); 
          -- GETTING THE NEW RESOURCE ID FROM SEQUENCE 
          IF NOT SEQUENCE_CUR%ISOPEN 
          THEN 
             OPEN SEQUENCE_CUR; 
          END IF; 
          FETCH SEQUENCE_CUR INTO RESOURCE_ID; 
           DBMS_OUTPUT.PUT_LINE('RESOURCE ID '|| RESOURCE_ID); 
          IF SEQUENCE_CUR%ISOPEN 
          THEN 
             CLOSE SEQUENCE_CUR; 
          END IF; 
          INSERT INTO DELIVERY_RESOURCE (ID, ZONE_CODE, DAY, PEOPLE, DELIVERY_RATE, NAME) 
          VALUES(RESOURCE_ID, RESOURCE_REC.ZONE_CODE, BASE_DATE, RESOURCE_REC.PEOPLE, RESOURCE_REC.DELIVERY_RATE, RESOURCE_REC.NAME); 

          -- GETTING TIMESLOTS FOR LAST SAME DAY AND INSERTING AS AS NEW RESOURCE FOR 8 DAY 
          IF NOT TIMESLOT_CUR%ISOPEN 
          THEN 
             OPEN TIMESLOT_CUR(RESOURCE_REC.ID); 
          END IF; 
          FETCH TIMESLOT_CUR INTO TIMESLOT_REC; 
          WHILE TIMESLOT_CUR%FOUND 
          LOOP 
             INSERT INTO TIMESLOT(ID, ZONE_ID, CAPACITY, BASE_DATE, START_TIME, END_TIME, CUTOFF_TIME, TRAFFIC_FACTOR, PLANNED_CAPACITY, STATUS, RESOURCE_ID, 
            CT_CAPACITY, IS_DYNAMIC, PREMIUM_CUTOFF_TIME, PREMIUM_CAPACITY, PREMIUM_CT_CAPACITY, ROUTING_START_TIME, ROUTING_END_TIME, 
            MOD_START_X, MOD_CUTOFF_Y, DISPLAY_DATE, DISPLAY_TIME, IS_PRIMARY ) 
           VALUES(SYSTEM_SEQ.NEXTVAL, ZONE_ID_IN, TIMESLOT_REC.CAPACITY, BASE_DATE, TIMESLOT_REC.START_TIME, TIMESLOT_REC.END_TIME, TIMESLOT_REC.CUTOFF_TIME, 
           TIMESLOT_REC.TRAFFIC_FACTOR, TIMESLOT_REC.PLANNED_CAPACITY, TIMESLOT_REC.STATUS, RESOURCE_ID, TIMESLOT_REC.CT_CAPACITY, IS_DYNAMIC_IN, 
           TIMESLOT_REC.PREMIUM_CUTOFF_TIME, 
           TIMESLOT_REC.PREMIUM_CAPACITY, 
           TIMESLOT_REC.PREMIUM_CT_CAPACITY, 
           TIMESLOT_REC.ROUTING_START_TIME, 
           TIMESLOT_REC.ROUTING_END_TIME , TIMESLOT_REC.MOD_START_X, 
           TIMESLOT_REC.MOD_CUTOFF_Y, TIMESLOT_REC.DISPLAY_DATE + 7, TIMESLOT_REC.DISPLAY_TIME,TIMESLOT_REC.IS_PRIMARY,TIMESLOT_REC.SERVICE_TYPE);

             FETCH TIMESLOT_CUR INTO TIMESLOT_REC; 
          END LOOP; 

          IF TIMESLOT_CUR%ISOPEN 
          THEN 
            CLOSE TIMESLOT_CUR; 
          TIMESLOT_REC := NULL; 
          END IF; 


          FETCH RESOURCE_CUR INTO RESOURCE_REC; 
         END LOOP; 

        END IF; 

        COMMIT; 
      END; 

  END; 
/
---
CREATE OR REPLACE PROCEDURE FDSTORE_PRDA.TIMESLOT_SNAPSHOT IS 
BEGIN 
INSERT INTO DLV.CAPACITY_SNAPSHOT (ID, 
SNAPSHOT_TIME, 
DELIVERY_DATE, 
ZONE_CODE, 
TIMESLOT_START, 
TIMESLOT_END, 
CUTOFF_TIME, 
PREMIUM_CUTOFF_TIME, 
LOYAL_RELEASE_TIME, 
PREMIUM_LOYAL_RELEASE_TIME, 
CAPACITY_TOTAL, 
CAPACITY_BASE, 
CAPACITY_LOYAL, 
PREMIUM_CAPACITY, 
PREMIUM_CT_CAPACITY, 
MANUALLY_CLOSED, 
RSV_BASE_REG_STD_COMM, 
RSV_BASE_REG_STD_UNCO, 
RSV_BASE_REG_PRE_COMM, 
RSV_BASE_REG_PRE_UNCO, 
RSV_PREMIUM_BASE_REG_STD_COMM, 
RSV_PREMIUM_BASE_REG_STD_UNCO, 
RSV_BASE_CT_STD_COMM, 
RSV_BASE_CT_STD_UNCO, 
RSV_PREMIUM_BASE_CT_STD_COMM, 
RSV_PREMIUM_BASE_CT_STD_UNCO, 
RSV_BASE_CT_PRE_COMM, 
RSV_BASE_CT_PRE_UNCO, 
RSV_LOYAL_CT_STD_COMM, 
RSV_LOYAL_CT_STD_UNCO, 
RSV_LOYAL_CTONLY_STD_COMM, 
RSV_LOYAL_CTONLY_STD_UNCO, 
RSV_LOYAL_REGONLY_STD_COMM, 
RSV_LOYAL_REGONLY_STD_UNCO, 
RSV_PREMIUM_CT_STD_COMM, 
RSV_PREMIUM_CT_STD_UNCO, 
RSV_PREMIUM_CTONLY_STD_COMM, 
RSV_PREMIUM_CTONLY_STD_UNCO, 
RSV_PREMIUMCT_REGONLY_STD_COMM, 
RSV_PREMIUMCT_REGONLY_STD_UNCO, 
IS_PRIMARY, 
SERVICE_TYPE 
) 
select 
DLV.SYSTEM_SEQ.nextval as ID, 
sysdate as SNAPSHOT_TIME, 
ts.BASE_DATE as DELIVERY_DATE, 
z.zone_code as ZONE_CODE, 
TO_DATE(TO_CHAR(ts.base_date, 'YYYY-MM-DD')||' '||to_char(ts.start_time, 'HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS') as TIMESLOT_START, 
TO_DATE(TO_CHAR(ts.base_date, 'YYYY-MM-DD')||' '||to_char(ts.end_time, 'HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS') as TIMESLOT_END, 
TO_DATE(TO_CHAR(ts.base_date - 1, 'YYYY-MM-DD')||' '||to_char(ts.cutoff_time, 'HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS') as CUTOFF_TIME, 
case when ts.premium_cutoff_time is not null then TO_DATE(TO_CHAR(ts.base_date, 'YYYY-MM-DD')||' '||to_char(ts.premium_cutoff_time, 'HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS') else null end as PREMIUM_CUTOFF_TIME, 
TO_DATE(TO_CHAR(ts.base_date - 1, 'YYYY-MM-DD')||' '||to_char(ts.cutoff_time - (z.ct_release_time/60/24), 'HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS') as LOYAL_RELEASE_TIME, 
case when ts.premium_cutoff_time is not null then TO_DATE(TO_CHAR(ts.base_date, 'YYYY-MM-DD')||' '||to_char(ts.premium_cutoff_time - (z.premium_ct_release_time/60/24), 'HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS') else null end as PREMIUM_LOYAL_RELEASE_TIME, 
ts.CAPACITY as CAPACITY_TOTAL, 
ts.CAPACITY - ts.CT_CAPACITY - ts.PREMIUM_CAPACITY as CAPACITY_BASE, 
ts.CT_CAPACITY as CAPACITY_LOYAL, 
ts.PREMIUM_CAPACITY as PREMIUM_CAPACITY, 
ts.PREMIUM_CT_CAPACITY as PREMIUM_CT_CAPACITY, 
ts.IS_CLOSED, 
(select count(*) from dlv.reservation where timeslot_id=ts.id and status_code = 10 and chefstable = ' ' and type='STD' AND CLASS IS NULL) -(select count(*) from dlv.reservation r, cust.profile p, cust.fdcustomer f where timeslot_id=ts.id and status_code = 10 and chefstable = ' ' and type='STD' AND CLASS IS NULL and p.customer_id=f.id and f.erp_customer_id =r.customer_id and p.profile_name= 'ChefsTable' and profile_value='1') as RSV_BASE_REG_STD_COMM, 
(select count(*) from dlv.reservation where timeslot_id=ts.id and status_code = 5 and chefstable = ' ' and type='STD' AND CLASS IS NULL) - (select count(*) from dlv.reservation r, cust.profile p, cust.fdcustomer f where timeslot_id=ts.id and status_code = 5 and chefstable = ' ' and type='STD' AND CLASS IS NULL and p.customer_id=f.id and f.erp_customer_id =r.customer_id and p.profile_name= 'ChefsTable' and profile_value='1')as RSV_BASE_REG_STD_UNCO, 
(select count(*) from dlv.reservation where timeslot_id=ts.id and status_code = 10 and type<>'STD') -(select count(*) from dlv.reservation r, cust.profile p, cust.fdcustomer f where timeslot_id=ts.id and status_code = 10 and type<>'STD' and p.customer_id=f.id and f.erp_customer_id =r.customer_id and p.profile_name= 'ChefsTable' and profile_value='1') as RSV_BASE_REG_PRE_COMM, 
(select count(*) from dlv.reservation where timeslot_id=ts.id and status_code = 5 and type<>'STD') - (select count(*) from dlv.reservation r, cust.profile p, cust.fdcustomer f where timeslot_id=ts.id and status_code = 5 and type<>'STD' and p.customer_id=f.id and f.erp_customer_id =r.customer_id and p.profile_name= 'ChefsTable' and profile_value='1') as RSV_BASE_REG_PRE_UNCO, 
(select count(*) from dlv.reservation where timeslot_id=ts.id and status_code = 10 and chefstable = ' ' and type='STD' AND CLASS = 'P' ) -(select count(*) from dlv.reservation r, cust.profile p, cust.fdcustomer f where timeslot_id=ts.id and status_code = 10 and chefstable = ' ' AND CLASS = 'P' and type='STD' and p.customer_id=f.id and f.erp_customer_id =r.customer_id and p.profile_name= 'ChefsTable' and profile_value='1') as RSV_PREMIUM_BASE_REG_STD_COMM, 
(select count(*) from dlv.reservation where timeslot_id=ts.id and status_code = 5 and chefstable = ' ' and type='STD' AND CLASS = 'P' ) - (select count(*) from dlv.reservation r, cust.profile p, cust.fdcustomer f where timeslot_id=ts.id and status_code = 5 and chefstable = ' ' AND CLASS = 'P' and type='STD' and p.customer_id=f.id and f.erp_customer_id =r.customer_id and p.profile_name= 'ChefsTable' and profile_value='1')as RSV_PREMIUM_BASE_REG_STD_UNCO, 
(select count(*) from dlv.reservation r, cust.profile p, cust.fdcustomer f where timeslot_id=ts.id and status_code = 10 and chefstable = ' ' AND CLASS IS NULL and type='STD' and p.customer_id=f.id and f.erp_customer_id =r.customer_id and p.profile_name= 'ChefsTable' and profile_value='1') as RSV_BASE_CT_STD_COMM, 
(select count(*) from dlv.reservation r, cust.profile p, cust.fdcustomer f where timeslot_id=ts.id and status_code = 5 and chefstable = ' ' AND CLASS IS NULL and type='STD' and p.customer_id=f.id and f.erp_customer_id =r.customer_id and p.profile_name= 'ChefsTable' and profile_value='1') as RSV_BASE_CT_STD_UNCO, 
(select count(*) from dlv.reservation r, cust.profile p, cust.fdcustomer f where timeslot_id=ts.id and status_code = 10 and chefstable = ' ' AND CLASS = 'P' and type='STD' and p.customer_id=f.id and f.erp_customer_id =r.customer_id and p.profile_name= 'ChefsTable' and profile_value='1') as RSV_PREMIUM_BASE_CT_STD_COMM, 
(select count(*) from dlv.reservation r, cust.profile p, cust.fdcustomer f where timeslot_id=ts.id and status_code = 5 and chefstable = ' ' AND CLASS = 'P' and type='STD' and p.customer_id=f.id and f.erp_customer_id =r.customer_id and p.profile_name= 'ChefsTable' and profile_value='1') as RSV_PREMIUM_BASE_CT_STD_UNCO, 
(select count(*) from dlv.reservation r, cust.profile p, cust.fdcustomer f where timeslot_id=ts.id and status_code = 10 and type<>'STD' and p.customer_id=f.id and f.erp_customer_id =r.customer_id and p.profile_name= 'ChefsTable' and profile_value='1') as RSV_BASE_CT_PRE_COMM, 
(select count(*) from dlv.reservation r, cust.profile p, cust.fdcustomer f where timeslot_id=ts.id and status_code = 5 and type<>'STD' and p.customer_id=f.id and f.erp_customer_id =r.customer_id and p.profile_name= 'ChefsTable' and profile_value='1') as RSV_BASE_CT_PRE_UNCO, 
(select count(*) from dlv.reservation where timeslot_id=ts.id and status_code = 10 and chefstable = 'X' AND CLASS IS NULL and type='STD') as RSV_LOYAL_CT_STD_COMM, 
(select count(*) from dlv.reservation where timeslot_id=ts.id and status_code = 5 and chefstable = 'X' AND CLASS IS NULL and type='STD') as RSV_LOYAL_CT_STD_UNCO, 
(select count(*) from dlv.reservation where timeslot_id=ts.id and status_code = 10 and chefstable = 'X' AND CLASS IS NULL and type='STD' and CT_DELIVERY_PROFILE is null) as RSV_LOYAL_CTONLY_STD_COMM, 
 (select count(*) from dlv.reservation where timeslot_id=ts.id and status_code = 5 and chefstable = 'X' AND CLASS IS NULL and type='STD' and CT_DELIVERY_PROFILE is null) as RSV_LOYAL_CTONLY_STD_UNCO, 
 (select count(*) from dlv.reservation where timeslot_id=ts.id and status_code = 10 and chefstable = 'X' AND CLASS IS NULL and type='STD' and CT_DELIVERY_PROFILE is not null) as RSV_LOYAL_REGONLY_STD_COMM, 
 (select count(*) from dlv.reservation where timeslot_id=ts.id and status_code = 5 and chefstable = 'X' AND CLASS IS NULL and type='STD' and CT_DELIVERY_PROFILE is not null) as RSV_LOYAL_REGONLY_STD_UNCO, 
 (select count(*) from dlv.reservation where timeslot_id=ts.id and status_code = 10 and chefstable = 'X' AND CLASS = 'PC' and type='STD') as RSV_PREMIUM_CT_STD_COMM, 
(select count(*) from dlv.reservation where timeslot_id=ts.id and status_code = 5 and chefstable = 'X' AND CLASS = 'PC' and type='STD') as RSV_PREMIUM_CT_STD_UNCO, 
(select count(*) from dlv.reservation where timeslot_id=ts.id and status_code = 10 and chefstable = 'X' AND CLASS = 'PC' and type='STD' and CT_DELIVERY_PROFILE is null) as RSV_PREMIUM_CTONLY_STD_COMM, 
 (select count(*) from dlv.reservation where timeslot_id=ts.id and status_code = 5 and chefstable = 'X' AND CLASS = 'PC' and type='STD' and CT_DELIVERY_PROFILE is null) as RSV_PREMIUM_CTONLY_STD_UNCO, 
 (select count(*) from dlv.reservation where timeslot_id=ts.id and status_code = 10 and chefstable = 'X' AND CLASS = 'PC' and type='STD' and CT_DELIVERY_PROFILE is not null) as RSV_PREMIUMCT_REGONLY_STD_COMM, 
 (select count(*) from dlv.reservation where timeslot_id=ts.id and status_code = 5 and chefstable = 'X' AND CLASS = 'PC' and type='STD' and CT_DELIVERY_PROFILE is not null) as RSV_PREMIUMCT_REGONLY_STD_UNCO, 
ts.IS_PRIMARY, 
ts.SERVICE_TYPE 
from 
dlv.TIMESLOT ts, 
dlv.ZONE z 
where 
ts.base_date >= trunc(sysdate) and z.id=ts.zone_id; 
END FDSTORE_PRDA.TIMESLOT_SNAPSHOT; 
/ 
--