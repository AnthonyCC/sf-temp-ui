import com.freshdirect.fdstore.content.*;

var store = ContentFactory.getInstance().getContentNode("FreshDirect");
var todo = new ArrayList();
todo.add(store);
var index = 0;
var count = 0;
var layouts = new HashMap();
while (todo.size()>0) {
  var first = todo.remove(0);
  // print("examining "+index+" - "+first);
  index++;
  if (first instanceof StoreModel) {
    todo.addAll(first.getDepartments());
  }
  if (first instanceof ProductContainer) {
    todo.addAll(first.getSubcategories());
    var inc = true;
    if (first.getRedirectUrl() != null) {
//      print("has redirect url : "+first + " - "+ first.getRedirectUrl());
      inc = false;
    }
    if (first.getHideUrl() != null) {
//      print("has hide url : "+first+ " - "+ first.getHideUrl());
      inc = false;
    }
    if (first.getLayout() == null) {
//       print("null layout : "+first);
       inc = false;
    }
    if (first.getLayoutType(-1) == 99) {
      // print("container "+first+", layout : "+first.getLayout()+", hide url : "+first.getHideUrl()+", redirect url: " +first.getRedirectUrl());
      print(" "+first+",");
    }

    if (inc) {
      var value = layouts.get(first.getLayout());
      if (value == null) {
        layouts.put(first.getLayout(), new Integer(1));
      } else {
        layouts.put(first.getLayout(), new Integer(value.intValue()+1));
      }
      count++;
    }
  }
}
print("success : "+index+", found layouts:"+count);
print("layouts:"+ layouts);
print("<table>");
for (var x = layouts.entrySet().iterator(); x.hasNext(); ) {
   var e = x.next();
   print("<tr><td>"+e.getKey()+"("+e.getKey().getId()+")</td><td>"+e.getValue()+"</td></tr>");
 }
print("</table>");
