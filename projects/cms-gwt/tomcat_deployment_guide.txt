GWT Tomcat Deployment Guide

# Requirements

- cms-gwt.war artefact, can be found release/applications folder
- Apache Tomcat 7.0.67
- Oracle JDBC driver (ojdbc6.jar) 

# Configure Tomcat


## If CMS-Admin is not present in tomcat create bin/setenv.sh with the following content:

```bash
# Set Spring profile for CMS
JAVA_OPTS="$JAVA_OPTS -Dspring.profiles.active=database"
# Set memory
export CATALINA_OPTS="$CATALINA_OPTS -Xms3072m -Xmx3072m"
```


## If CMS-Admin is present in tomcat create bin/setenv.sh with the following content:

```bash
# Set Spring profile for CMS
JAVA_OPTS="$JAVA_OPTS -XX:PermSize=256m -XX:MaxPermSize=356m -Dspring.profiles.active=fd-dev-env,database"
# Set memory
export CATALINA_OPTS="$CATALINA_OPTS -Xms3072m -Xmx3072m"
```

Note1: `-Dspring.profiles.active=database` tells CMS to use Database profile
Note2: GWT memory settings are adjusted via CATALINA_OPTS environment variable.

## Place configuration files

### Cache Config

Please obtain ehcache.xml configuration file from projects/cmseue/src/main/resources/ehcache.xml  and place it into lib/ folder.

### FD CMS Config

Create fdcms-db.properties file under lib/ folder. Sample content:

```properties
cms.resource.basePath=file:/opt/fddata/storefront/docroot/storedata/FreshDirect

spring.datasource.driverClassName=oracle.jdbc.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@//devora12cscan.nj01:1521/cmstest
spring.datasource.user=CMS
spring.datasource.password=CMS
spring.erps.datasource.user=erps
spring.erps.datasource.password=erps
spring.datasource.pool=cms-connection-pool

hibernate.default_schema=CMS

hibernate.dialect=org.hibernate.dialect.Oracle10gDialect
hibernate.show_sql=false
hibernate.format_sql=false

javax.persistence.create-database-schemas=false
javax.persistence.schema-generation.database.action=none
javax.persistence.schema-generation.scripts.action=none

cms.adminapp.path=http://cms01.cmsdev01.nj01/cmsadmin
cms.adminapp.ui.url=http://cmsadmin.cmsdev01.nj01/
```

Note1: GWT no longer depends on existing configuration files like fdstore.properties

### Logging

Put a copy of logback.xml under lib/ folder.

### Internal Users

To enable internal users to use GWT, please edit conf/tomcat-users.xml like below:

```xml
<tomcat-users>
  <user username="root" password="12345678" roles="gwt-users"/>
  <user username="qaadmin" password="Password02" roles="gwt-users"/>
</tomcat-users>
```

### LDAP authentication

To enable LDAP authentication please extend conf/server.xml with the following configuration option:

```xml
<Server ...>
  ...
  <Engine name="Catalina" ...>
      <Realm className="org.apache.catalina.realm.LockOutRealm">
        <Realm className="org.apache.catalina.realm.JNDIRealm"
          authentication="simple"
          connectionURL="ldap://ldap.nj01:389"
          connectionName="CN=svc_cmsdev_ldap,OU=Service Accounts,OU=Users,OU=Ecomm,DC=ecomm,DC=web,DC=freshdirect,DC=com"
          connectionPassword="3WhxGC1hsfK5"
          userBase="OU=Users,OU=Ecomm,DC=ecomm,DC=web,DC=freshdirect,DC=com"
          userSearch="(sAMAccountName={0})"
          userSubtree="true"
          userRoleAttribute="distinguishedName"
          commonRole="gwt-users"
        />

        <!-- This Realm uses the UserDatabase configured in the global JNDI
             resources under the key "UserDatabase".  Any edits
             that are performed against this UserDatabase are immediately
             available for use by the Realm.  -->

        <Realm className="org.apache.catalina.realm.UserDatabaseRealm"
               resourceName="UserDatabase"/>
      </Realm>
  </Engine>
</Server>
```

## Oracle Driver

Please obtain ojdbc6.jar from projects/cmseue/src/main/resources/lib/  and place it into lib/ folder.

# Deploy GWT

Copy cms-gwt.war under <tomcat>/webapps/ folder. Tomcat will automatically detects and deploys GWT.

# Test Deployment

GWT should be reachable at /cms-gwt/cmsgwt.html URI.

