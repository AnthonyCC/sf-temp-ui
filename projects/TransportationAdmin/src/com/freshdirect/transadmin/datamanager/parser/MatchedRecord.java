/**
 * Flatworm - A Java Flat File Importer Copyright (C) 2004 James M. Turner
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 * 
 */

package com.freshdirect.transadmin.datamanager.parser;

import java.util.HashMap;
import java.util.Iterator;

/**
 * The <code>MatchedRecord</code> is used to return the record data from a <code>FileFormat</code> record request.
 * It has a name field, which stores the name of the record found, and a set of beans generated by parsing of the
 * record.
 */
public class MatchedRecord
{
    private HashMap beans = new HashMap();

    private String recordName;

    public MatchedRecord(String name, HashMap beans)
    {
        recordName = name;
        Iterator beansIt = beans.keySet().iterator();
        while (beansIt.hasNext())
        {
            String key = (String) beansIt.next();
            Object val = beans.get(key);
            this.beans.put(key, val);
        }
    }

    /**
     * Gets the name of the record found.
     * 
     * @return The record name
     */
    public String getRecordName()
    {
        return recordName;
    }

    /**
     * Gets a specific bean, or null if not found.
     * 
     * @param beanName The name of the bean to retrieve
     * @return The bean, or null
     */
    public Object getBean(String beanName)
    {
        return beans.get(beanName);
    }

    public String toString()
    {
        StringBuffer sb = new StringBuffer();
        sb.append(super.toString());
        sb.append("[");
        sb.append("MatchedRecord: recordName = ");
        sb.append(recordName);
        sb.append(", beans = {");
        Iterator itBeans = beans.keySet().iterator();
        while (itBeans.hasNext())
        {
            Object key = itBeans.next();
            Object val = beans.get(key);
            sb.append(key);
            sb.append("=");
            sb.append(val.toString());
            if (itBeans.hasNext())
            {
                sb.append(", ");
            }
        }
        sb.append("}]");
        return sb.toString();
    }

}
