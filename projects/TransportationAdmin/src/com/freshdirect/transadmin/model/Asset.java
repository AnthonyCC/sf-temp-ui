package com.freshdirect.transadmin.model;

//Generated Dec 5, 2008 2:34:33 PM by Hibernate Tools 3.2.2.GA

import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;

import com.freshdirect.transadmin.constants.EnumAssetStatus;

/**
 * Dispatch generated by hbm2java
 */
public class Asset implements java.io.Serializable{

	private String assetId;
	private String assetNo;
	private String assetDescription;
	private AssetType assetType;
	private EnumAssetStatus assetStatus;
	private AssetTemplate assetTemplate;
	
	private String barcode;
	
	private Set assetAttributes = new HashSet(0);
	private Map<String, String> attibuteMap = new HashMap<String, String>();
	
	public Asset() {
		
	}

	public Asset(String assetId) {
		super();
		this.assetId = assetId;
	}

	public Asset(String assetId, String assetNo, String assetDescription,
			AssetType assetType, AssetTemplate assetTemplate) {
		super();
		this.assetId = assetId;
		this.assetNo = assetNo;
		this.assetDescription = assetDescription;
		this.assetType = assetType;
		this.assetTemplate = assetTemplate;
	}

	public Asset(String assetId, String assetNo, String assetDescription,
			AssetType assetType, EnumAssetStatus assetStatus, AssetTemplate assetTemplate, Set assetAttributes) {
		super();
		this.assetId = assetId;
		this.assetNo = assetNo;
		this.assetDescription = assetDescription;
		this.assetType = assetType;
		this.assetStatus = assetStatus;
		this.assetAttributes = assetAttributes;
		this.assetTemplate = assetTemplate;
	}

	public String getAssetId() {
		return assetId;
	}

	public String getAssetNo() {
		return assetNo;
	}

	public String getAssetDescription() {
		return assetDescription;
	}

	public AssetType getAssetType() {
		return assetType;
	}

	public EnumAssetStatus getAssetStatus() {
		return assetStatus;
	}

	public Set getAssetAttributes() {
		return assetAttributes;
	}

	public void setAssetId(String assetId) {
		this.assetId = assetId;
	}

	public void setAssetNo(String assetNo) {
		this.assetNo = assetNo;
	}

	public void setAssetDescription(String assetDescription) {
		this.assetDescription = assetDescription;
	}

	public void setAssetType(AssetType assetType) {
		this.assetType = assetType;
	}

	public void setAssetStatus(EnumAssetStatus assetStatus) {
		this.assetStatus = assetStatus;
	}

	public void setAssetAttributes(Set assetAttributes) {
		this.assetAttributes = assetAttributes;
	}
	
	public AssetTemplate getAssetTemplate() {
		return assetTemplate;
	}

	public void setAssetTemplate(AssetTemplate assetTemplate) {
		this.assetTemplate = assetTemplate;
	}	

	public String getBarcode() {
		return barcode;
	}

	public void setBarcode(String barcode) {
		this.barcode = barcode;
	}
	
	public Map<String, String> getAttibuteMap() {

		if (this.assetAttributes.size() > 0) {
			Iterator<AssetAttribute> attributeItr = this.assetAttributes.iterator();
			while (attributeItr.hasNext()) {
				AssetAttribute _attibute = attributeItr.next();
				if (_attibute.getId() != null
						&& !attibuteMap.containsKey(_attibute.getId()
								.getAttributeType())) {
					attibuteMap.put(_attibute.getId().getAttributeType(),
							_attibute.getAttributeValue());
				}
			}
		}

		return attibuteMap;
	}

	public void setAttibuteMap(Map<String, String> attibuteMap) {
		this.attibuteMap = attibuteMap;
	}

	public String getVendor() {
		return this.getAttibuteMap().get("Vendor - Truck");		
	}
	
	public String getDomicile() {
		return this.getAttibuteMap().get("Domicile");
	}
	
	public String getBodyLength() {
		return this.getAttibuteMap().get("Body Length");
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((assetId == null) ? 0 : assetId.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Asset other = (Asset) obj;
		if (assetId == null) {
			if (other.assetId != null)
				return false;
		} else if (!assetId.equals(other.assetId))
			return false;
		return true;
	}
	
	
}
