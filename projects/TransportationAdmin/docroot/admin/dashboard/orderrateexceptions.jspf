<div style="position:absolute; top:140px;left:700px;">
						<div style="margin-top:4px;float:left;font-weight:bold;">Date:&nbsp;</div>
						<div style="float:left;">
							<input style="width:85px;" maxlength="40" name="exceptionDate" id="exceptionDate" value='<c:out value="${exceptionDate}"/>' />
								                    			
							<span><input type="button" value="Add" onclick="javascript:addException();" /></span>
				
						</div>
</div>	
					
<div style="width: 300px;padding:0 0 0 50px;float:left;">
						<br><br><div id="ed_message"></div><br>
						<div class="grid-header" style="width: 200px;">
				      		<label>Order Rate - Exception Dates</label>
    					</div>
						<div id="edGrid" style="width: 200px; height: 300px;"></div>
						<br>
						<form id="orderRateExcForm" action="" method="POST">
  							<input type="submit" value="Save">
						</form>
</div>

<script type="text/javascript">
function removeRow3(current_row) {
	  var dd = ed_dataView.getItems();
	  dd.splice(current_row,1);
	  var r = current_row;
	  while (r<dd.length){
	    ed_grid.invalidateRow(r);
	    r++;
	  }
	  ed_dataView.beginUpdate();
	  ed_dataView.setItems(dd);
	  ed_dataView.endUpdate();
	  ed_dataView.refresh();
	  ed_grid.updateRowCount();
	  ed_grid.invalidate();
	  ed_grid.scrollRowIntoView(current_row-1);
	  }
	  
function addException(){
		ed_grid.setOptions({enableAddRow: true});
		var newItem	=	{};
		newItem.exceptionDate = $("#exceptionDate").val();
		ed_grid.onAddNewRow(newItem);
}

var ed_dataView;
var ed_grid;
var ed_data = [];
var ed_columns = [
{id: "exceptionDate", name: "Exception Date", field: "exceptionDate", minWidth: 120, editor: Slick.Editors.Date, sortable: true},
{id: 'id', name: '', field: 'exceptionDate',  width: 15, formatter: function (r, c, id, def, datactx) { 
    return '<a href="#" onclick="removeRow3('+ r +')">X</a>'; }
}
];
var ed_options = {
		  enableAddRow: true,
		  enableCellNavigation: true,
		  asyncEditorLoading: false,
		  topPanelHeight: 25
		};
function getExceptions(){
	$.ajax({
		url : "v/1/list/orderrate/exception/",
		type : "GET",
		contentType : "application/json",
		dataType : "json",
		async : true,
		beforeSend: function() {
		    $('#edGrid').html("<div id='loadingImage'><img src='images/loading.gif' /></div>");
		  },
		success : function(json) {
			for(var i=0;i < json.rows.length;i++) {
				var d = (ed_data[i] = {});
			      d["exceptionDate"] = json.rows[i].exceptionDate;
			      d["id"] = "new_" + (Math.round(Math.random()*10000));
			}
			
			ed_dataView = new Slick.Data.DataView();
			ed_grid = new Slick.Grid("#edGrid", ed_dataView, ed_columns, ed_options);
			ed_grid.setSelectionModel(new Slick.RowSelectionModel());
			ed_grid.setSortColumn("exceptionDate",true);
			
			
			// wire up model events to drive the grid
			ed_dataView.onRowCountChanged.subscribe(function (e, args) {
				ed_grid.updateRowCount();
				ed_grid.render();
			});
	
			ed_dataView.onRowsChanged.subscribe(function (e, args) {
				ed_grid.invalidateRows(args.rows);
				ed_grid.render();
			});
			
			ed_grid.onSort.subscribe(function (e, args) {
				  sortcol = args.sortCol.field;  // Maybe args.sortcol.field ???
				  ed_dataView.sort(compareDates, args.sortAsc);
				});

			
			ed_dataView.beginUpdate();
			ed_dataView.setItems(ed_data,"exceptionDate");
			ed_dataView.endUpdate();
			
			ed_dataView.refresh();
			ed_grid.invalidate();
			$('#edGrid').show();
			ed_grid.onAddNewRow = addItem;
			
		},
		error : function(msg) {
			$('#ed_message').css('color','#ff0000');
			$('#ed_message').html('Fetch Order rate exceptions Failed.');
		}
	});
}

function compareDates(a, b) {
	if(Date.parse(a[sortcol]) > Date.parse(b[sortcol])) return 1;
    if(Date.parse(a[sortcol]) < Date.parse(b[sortcol])) return -1;
    return 0;
}

	function addItem(newItem,columnDef) {
		
		item = {
					"id": "new_" + (Math.round(Math.random()*10000))
				};
		$.extend(item,newItem);											
		ed_dataView.addItem(item);
		//ed_grid.focusLastRow();
		$('#ed_message').html("");
	    ed_grid.invalidateRow(ed_data.length);
	    ed_dataView.refresh();
	    ed_grid.updateRowCount();
	    ed_grid.render();
	      
	}
	
	 $(function() {
		    $("form#orderRateExcForm").submit(
		    		
		      function(e) {
		    	  e.preventDefault();
		    	  $.ajax({
					url : "v/1/save/orderrate/exception",
					type : "POST",
					data : "data=" + JSON.stringify(ed_dataView.getItems()),
					dataType : "html",
					async : false,
					success : function(json) {
						jsonRsp = JSON.parse(json);
						if(jsonRsp.status=='FAILED')
							$('#ed_message').html('Save order rate exceptions Failed.').css('color','#ff0000');
						else
							$('#ed_message').html('Save order rate exceptions Successful.').css('color','#0000ff');
						var gridId = $('#edGrid').attr("class");
					     gridId = '#'+gridId.replace(" ui-widget","")+'exceptionDate';
					     $(gridId).click();
					      
					},
					error : function(msg) {
						$('#ed_message').html('Save order rate exceptions Failed.').css('color','#ff0000');
					}
				});
		      }
		    );
		  });
</script>