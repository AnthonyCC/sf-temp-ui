<serviceconfig name="storefrontservices">
	<apis>
		  <api name="orderrate"> 
		  		<datasource>db_storefront</datasource>
				<endpoint>orderrate</endpoint>
						<call><![CDATA[select "Order Count","Time Frame" FROM (
							select to_number( to_char(s.cromod_Date,'HH24')), count(1) as "Order Count", 
							to_number( to_char(s.cromod_Date,'HH24'))|| '-'|| (to_number( to_char(s.cromod_Date,'HH24'))+1) as "Time Frame" from cust.sale s, cust.salesaction sa
							where S.CROMOD_DATE=sa.action_date and sa.action_type in ('CRO','MOD') and s.id=sa.sale_id and
							S.CROMOD_DATE between trunc(sysdate-1) and trunc(sysdate) and s.status!='CAN' and sa.requested_Date>trunc(sysdate-1)
							group by to_number( to_char(s.cromod_Date,'HH24')) 
							order by  to_number(to_char(s.cromod_Date,'HH24'))
							)
					]]>
			<parameters>				
			</parameters>
			<cache>
				<maxsize></maxsize>
				<frequency></frequency>
			</cache>
			</call>
		</api> 
		
		<api name="handoffdetails"> 
		  		<datasource>db_storefront</datasource>
				<endpoint>handoffdetails</endpoint>
						<call><![CDATA[select to_char(DI.CUTOFFTIME,'MM/DD/YY HH:MI:SS AM') "Cut Off Time",
							case when t.premium_cutoff_time is null then to_char(t.base_date-1, 'MM/DD/YY ') || to_char(t.cutoff_time, 'HH:MI:SS AM') else to_char(t.base_date, 'MM/DD/YY ') || to_char(t.premium_cutoff_time, 'HH:MI:SS AM') end  "Hand Off Time", count(1) "Order Count"
							 from cust.sale s, cust.salesaction sa, cust.deliveryinfo di, dlv.reservation r, dlv.timeslot t
							where s.id=sa.sale_id and s.cromod_date=sa.action_date and sa.action_type in ('CRO','MOD')
							and sa.requested_date=? and sa.id=di.salesaction_id and s.type='REG' and s.status!='CAN' 
							and DI.RESERVATION_ID=r.id and r.timeslot_id=t.id
							group by DI.CUTOFFTIME,case when t.premium_cutoff_time is null then to_char(t.base_date-1, 'MM/DD/YY ') || to_char(t.cutoff_time, 'HH:MI:SS AM')  else to_char(t.base_date, 'MM/DD/YY ') || to_char(t.premium_cutoff_time, 'HH:MI:SS AM') end
							            order by case when t.premium_cutoff_time is null then to_char(t.base_date-1, 'MM/DD/YY ') || to_char(t.cutoff_time, 'HH:MI:SS AM') else to_char(t.base_date, 'MM/DD/YY ') || to_char(t.premium_cutoff_time, 'HH:MI:SS AM') end
					]]>
				<parameters>
							<parameter>
								<name>deliverydate</name>
								<type>DATE</type>
								<default>$SYSDATE</default>								
							</parameter>							
				</parameters>
			<cache>
				<maxsize></maxsize>
				<frequency></frequency>
			</cache>
			</call>
		</api>   
		
		<api name="salesforecast"> 
		  		<datasource>db_storefront</datasource>
				<endpoint>salesforecast</endpoint>
						<call><![CDATA[SELECT  to_char("Delivery Date",'YYYYMMDD'),"Order Count","Zone","Order Total","Sub Total","Total AOS","Sub Total AOS",
SUM("Order Count") OVER (PARTITION BY "Delivery Date") "Total Orders for the day",
SUM("Order Total") OVER (PARTITION BY "Delivery Date") "Sales Amount",
 TRUNC(SUM("Order Total") OVER (PARTITION BY "Delivery Date")/SUM("Order Count") OVER (PARTITION BY "Delivery Date"),2) "AOS For the day",
TRUNC(("Order Count"/SUM("Order Count") OVER (PARTITION BY "Delivery Date"))*100,2) "Order % for Zone",
TRUNC(("Order Total"/SUM("Order Total") OVER (PARTITION BY "Delivery Date"))*100,2) "Sales Amount % for Zone"
FROM (
Select sum("Order Count") "Order Count","Delivery Date" ,
NVL("Zone",'Core')  "Zone", sum(a) "Order Total", sum(st) "Sub Total", 
 TRUNC(sum(a)/sum("Order Count"),2) as "Total AOS",
 TRUNC(sum(st)/sum("Order Count"),2) as "Sub Total AOS"
 
  FROM 
(
select count(s.id) "Order Count",sum(sa.amount) a, sum(SA.SUB_TOTAL) st,  sa.requested_date "Delivery Date", 
        case DI.DELIVERY_TYPE when 'C' THEN 'COR' ELSE 'RES'  end "Service Type", 
        DI.ZIP "Zip" 
from cust.sale s, cust.salesaction sa, cust.deliveryinfo di
where   s.id=sa.sale_id and s.cromod_date=sa.action_date and sa.id=di.salesaction_id
            and sa.requested_date between (sysdate-9) and (sysdate+1) 
            and (s.status!='CAN' AND s.status!='AUF')
GROUP BY  sa.requested_date, 
        case DI.DELIVERY_TYPE when 'C' THEN 'COR' ELSE 'RES'  end, 
        DI.ZIP 
) A,
(select prz.zip_code "Zip" , PZ.SERVICE_TYPE "Service Type", PZ.DESCRIPTION  "Zone" from  ERPS.PRICING_REGION_ZIPS prz,
(select pz.region_id,PZ.SERVICE_TYPE, PZ.DESCRIPTION,T.version  from erps.pricing_zone pz,
( select pz.sap_id, pz.service_type,max(version) version from erps.pricing_zone pz
group by pz.sap_id, pz.service_type ) T
where pz.sap_id=T.sap_id and pz.version=T.version
) pz
WHERE  PRZ.REGION_ID=PZ.REGION_ID and PRZ.VERSION=PZ.VERSION
) B

where A."Service Type"=B."Service Type"(+) and A."Zip"=B."Zip"(+)
Group By "Delivery Date","Zone"

)
Order By "Delivery Date" asc, "Order Count" desc

]]>
				<parameters>				
				</parameters>
			<cache>
				<maxsize></maxsize>
				<frequency>15</frequency>
			</cache>
			</call>
		</api>   
		
		
		
	</apis>
</serviceconfig>