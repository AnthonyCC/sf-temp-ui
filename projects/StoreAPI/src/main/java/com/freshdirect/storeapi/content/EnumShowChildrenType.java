/* Generated by Together */

package com.freshdirect.storeapi.content;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class EnumShowChildrenType implements Serializable {

	public final static EnumShowChildrenType ALWAYS_FOLDERS = new EnumShowChildrenType("Always Folders", 3);
    public final static EnumShowChildrenType BROWSE_PATH = new EnumShowChildrenType("If In Browse Path", 0);
    public final static EnumShowChildrenType ALWAYS = new EnumShowChildrenType("Always", 1);
    public final static EnumShowChildrenType NEVER = new EnumShowChildrenType("Never", 2);

    private static List types = null;

    static {
        ArrayList t = new ArrayList();
        t.add(ALWAYS_FOLDERS);
        t.add(BROWSE_PATH);
        t.add(ALWAYS);
        t.add(NEVER);
        types = Collections.unmodifiableList(t);
    }

    public static List getShowChildrenTypes() {
        return types;
    }

    public static EnumShowChildrenType getShowChildrenType(int lid) {
		for (int i=0;i < types.size();i++) {
            EnumShowChildrenType sc = (EnumShowChildrenType) types.get(i);
            if (sc.getId() == lid)
                return sc;
        }
        return null;
    }

     public boolean equals(Object o) {
        if (o instanceof EnumShowChildrenType) {
			if (((EnumShowChildrenType)o).getId() == this.id) {
                return true;
			}
        }
		return false;
    }

	private EnumShowChildrenType(String n, int i) {
        this.name = n;
        this.id = i;
    }


	public String getName(){
		return name;
	}
	
	public int getId(){
		return id;
	}


	private final String name;
	private final int id;
	
	public String toString() {
	    return String.valueOf(id);
	}
}
