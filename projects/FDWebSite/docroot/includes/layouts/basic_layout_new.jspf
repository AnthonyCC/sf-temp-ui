<%@   page import="java.util.List"
%><%@ page import="java.util.Map"
%><%@ page import="java.util.Date"
%><%@ page import="java.util.ArrayList"
%><%@ page import="java.util.Locale"
%><%@ page import="java.util.Iterator"
%><%@ page import="java.text.SimpleDateFormat"
%><%@ page import="com.freshdirect.webapp.util.ProductImpression"
%><%@ page import="com.freshdirect.webapp.util.FDURLUtil"
%><%@ page import="com.freshdirect.fdstore.content.ProductModel"
%><%@ page import="com.freshdirect.fdstore.customer.FDUserI"
%><%@ page import="com.freshdirect.fdstore.customer.FDIdentity"
%><%@ page import="com.freshdirect.fdstore.lists.FDListManager"
%><%@ page import="com.freshdirect.fdstore.lists.FDCustomerProductListLineItem"
%><%@ page import="com.freshdirect.webapp.taglib.fdstore.SessionName"
%><%@ page import="com.freshdirect.fdstore.util.DYFUtil"
%><%@ page import="com.freshdirect.fdstore.util.NewProductsGrouping"
%><%@ page import="com.freshdirect.fdstore.util.TimeRange"
%>

<%@ taglib uri="freshdirect" prefix="fd"%>
<%@ taglib uri="/WEB-INF/shared/tld/fd-display.tld" prefix='display' %>

<%--

Smart Search Grid View
======================

@author segabor

@input products	Instance of {@link Collection<ProductModel>}
@input trk			Tracking code (String)
@input results		Search results
--%><%
final java.text.NumberFormat CURRENCY_FORMATTER = java.text.NumberFormat.getCurrencyInstance(Locale.US);
final SimpleDateFormat DATE_FORMATTER = new SimpleDateFormat("MM/dd/yy");
final FDUserI u = (FDUserI) request.getSession().getAttribute(SessionName.USER);
int row_cnt = 0;
final int GRID_ROW_SIZE=4; // maximum number of items per row (number of columns)
int n_cols = 0; // number of columns
boolean reverseOrder = "desc".equalsIgnoreCase(request.getParameter("order"));
boolean sort = request.getParameter("sort") != null;
Map groupedMap = null;
if(showGroup) {
    NewProductsGrouping grouping = new NewProductsGrouping();
    groupedMap = grouping.groupBy(products, reverseOrder);
} 
if(groupedMap == null) {
    groupedMap = new LinkedHashMap();
    //Create a dummy time range.
    TimeRange dummy = new TimeRange(1,0,0,TimeRange.NULL, TimeRange.NULL);
    groupedMap.put(dummy, products);
}

%>
<table style="width:100%">
<%
List timeRanges = new ArrayList(groupedMap.keySet());
for(Iterator itr=timeRanges.iterator();itr.hasNext();){
    //Sum up the column count based on individual groups.
    TimeRange tr = (TimeRange) itr.next();
    List groupedProducts = (List) groupedMap.get(tr);
    n_cols = n_cols + (int) Math.ceil((float)groupedProducts.size()/GRID_ROW_SIZE);
}
if(reverseOrder){
    Collections.reverse(timeRanges);
}

boolean shouldRenderBlankCells = false; //blank cells off by default

for(Iterator itr=timeRanges.iterator();itr.hasNext();){
TimeRange tr = (TimeRange) itr.next();
%>
<%
List groupedProducts = (List) groupedMap.get(tr);
if(tr.getDescription() != null && tr.getDescription().length() > 0) {
%>
<tr><td colspan="4"><div class="title12" style="text-align: left; margin: 14x 14x 0px;"><%= tr.getDescription()  %>&nbsp;(<%= groupedProducts.size() %>)<br/></div></td></tr>
<tr><td colspan="4"><hr size="1" style="color:#ccc"></td></tr>
<%
}
%>
<%
// turn products into product impressions

List impressions = new ArrayList();
for (Iterator it=groupedProducts.iterator(); it.hasNext();) {
	impressions.add( new ProductImpression((ProductModel) it.next()) );
}


boolean singleRow = (impressions.size() <= GRID_ROW_SIZE); // product list fits into just one row
int rank = nav.getPageOffset()+1;

shouldRenderBlankCells = (itr.hasNext() || shouldRenderBlankCells); //check if blanks need to be rendered
%>

	<fd:PIPLayout id="piRow" rowSize="<%= GRID_ROW_SIZE %>" impressions="<%= impressions %>" maxRowHeight="rowHeight" singleRowMode="<%= singleRow %>">
		<tr>
			<% int colCount = 0; %>
			<fd:PIPRow id="pi" impressionRow="<%= piRow %>" isBlankCell="isBlankCell" shouldRenderBlankCells="<%= shouldRenderBlankCells %>"><%
				// product to render
				ProductModel productNode = pi.getProductModel();
		
				boolean hasWas = false;
				Double defaultPrice = null;
				String priceUnit = null;
				double basePrice = Double.NaN;
				if (pi.getProductInfo() != null) {
					defaultPrice = new Double(pi.getProductInfo().getZonePriceInfo(u.getPricingContext().getZoneId()).getDefaultPrice());
					priceUnit = pi.getProductInfo().getDisplayableDefaultPriceUnit().toLowerCase();
					hasWas = pi.getProductInfo().getZonePriceInfo(u.getPricingContext().getZoneId()).isItemOnSale();
					basePrice = Double.NaN;
					if (hasWas) {
						basePrice = pi.getProductInfo().getZonePriceInfo(u.getPricingContext().getZoneId()).getSellingPrice();
					}
				}
				
				boolean isYourFave = DYFUtil.isFavorite(productNode, u);
		
				// URI that points to product page
				String prdURI = FDURLUtil.getProductURI(productNode, (String)trk, (isYourFave ? "fave" : nav.getSortByName()), rank);
			
				//long w = singleRow ? Math.round(100.0/piRow.size()) : Math.round(100.0/GRID_ROW_SIZE) /* = 100/4 */;
				long w = 100/GRID_ROW_SIZE;
				if (!shouldRenderBlankCells) { w = singleRow ? Math.round(100.0/piRow.size()) : Math.round(100.0/GRID_ROW_SIZE); }

				if (isBlankCell) {
					%><td style="width: <%= w %>%; text-align: center; <%= colCount == 0 ? "padding-left: 5px;" :""%> 
						<%= colCount == piRow.size() - 1 ? "padding-right:5px;" : "" %>" valign="top" ><!-- blank --></td><%
				}else{
				%>
					<td style="width: <%= w %>%; text-align: center; <%= colCount == 0 ? "padding-left: 5px;" :""%> 
						<%= colCount == piRow.size() - 1 ? "padding-right:5px;" : "" %>" valign="top" >
						
						<%-- Product Image --%>
						<table align="center">
							<tr>
								<td style="padding: 0; height: <%= rowHeight.intValue() %>px; vertical-align: bottom; text-align: center">
									<display:ProductImage product="<%= productNode %>" action="<%= prdURI %>" newProductPage="true" />
								</td>
							</tr>
						</table>
						<% if (pi.getProductModel().isFullyAvailable()) { %>	
							<display:ProductRating product="<%= productNode %>"/>
							<display:ProductName product="<%= productNode %>" action="<%= prdURI %>" />
						<% } else { %>
							<display:ProductName product="<%= productNode %>" action="<%= prdURI %>" style="color: #999999;"/>
						<% } %>
						
						<%
						// Configuration description
						//
						if (pi.getConfigurationDescription() != null) {
							%><div style="color: <%=pi.getProductModel().isFullyAvailable() ? "black" : "#999999" %>">(<%= pi.getConfigurationDescription() %>)</div>
						<% }
		
						// Default price
						//
						String scaledPrices[] = pi.getScaledPrices();
						if (defaultPrice != null) { %>
							<div class="normal-price">
							<% if (hasWas) { %>
								<span class="<%= scaledPrices.length > 0 ? "save-price-tiered" : "save-price" %>"><%=CURRENCY_FORMATTER.format(defaultPrice.doubleValue()) %>/<%= priceUnit %></span>
								</div>
								<div style="white-space: nowrap;">
								<span class="save-base-price">
									(was <%=CURRENCY_FORMATTER.format(basePrice) %>)
								</span>
							<% } else { %>
									<span class="<%= scaledPrices.length > 0 ? "normal-price-tiered" : "normal-price" %>"><%=CURRENCY_FORMATTER.format(defaultPrice.doubleValue()) %>/<%= priceUnit %></span>
							<% } %>
							</div>
						<% }
		
						// Scaled prices
						//
						if (scaledPrices != null && scaledPrices.length > 0) { %>
							<div class="save-price">
								<% for (int ymalSci = 0; ymalSci < scaledPrices.length; ymalSci++) { %>
									<%= scaledPrices[ymalSci] %><br/>
								<% } %>
							</div><%
						}
						rank++;
						%>
                <!-- Department name : $$$$$$$$$$$$$$ <%= productNode.getDepartment().getFullName() %> -->
					</td>
				<% } %>
			</fd:PIPRow>
		</tr>
		<%
			// don't display the bar below the last product
			if (row_cnt < n_cols-1) {
				%><tr><td colspan="4"><hr size="1" style="color:#ccc"></td></tr><%
			}
			row_cnt++;
		%>
	</fd:PIPLayout>

<%
}
%>

</table>