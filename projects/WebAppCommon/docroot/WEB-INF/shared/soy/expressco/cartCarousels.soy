{namespace expressco}

/**
 * @param? recommendationTabs
 * @param? productSamplesTab
 */
{template .viewCartTabbedCarousel}
{call expressco.checkoutTabbedCarouselDisplay}
	{param recommendationTabs:$recommendationTabs /}
	{param productSamplesTab:$productSamplesTab /}
	{param cmEventSource:'view_cart' /}
	{param apiEndPoint:'/api/viewcart/recommendation' /}
	{param fullSize:true /}
{/call}
{/template}

/**
 * @param? recommendationTabs
 * @param? productSamplesTab
 */
{template .checkoutTabbedCarousel}
{call expressco.checkoutTabbedCarouselDisplay}
	{param recommendationTabs:$recommendationTabs /}
	{param productSamplesTab:$productSamplesTab /}
	{param cmEventSource:'checkout' /}
	{param apiEndPoint:'/api/viewcart/recommendation' /}
	{param fullSize:true /}
{/call}
{/template}

/**
 * @param? recommendationTabs
 * @param? productSamplesTab
 * @param? cmEventSource
 * @param? apiEndPoint
 * @param? fullSize
 */
{template .checkoutTabbedCarouselDisplay}
	/* sanity checks */
	{let $cmEventSource_clean}{if $cmEventSource }{$cmEventSource}{else}tabbedRecommender{/if}{/let}
	{let $hasProductSamplesTab: $productSamplesTab and $productSamplesTab.carouselData and $productSamplesTab.carouselData.products and length($productSamplesTab.carouselData.products)>0 /}

	/* check for any data */
	{if ($recommendationTabs) or ($hasProductSamplesTab)}
		<div class="tabbed-carousel {if $fullSize}fullsize{/if}" data-component="tabbedRecommender" data-cmeventsource="{$cmEventSource_clean}" {if $apiEndPoint}data-apiendpoint="{$apiEndPoint}"{/if}>
			/* this ul is the tabs */
			<ul class="tabs" role="tablist">
				/* check product samples/donations first */
				{if $hasProductSamplesTab}
					/* hard-coded titles :( */
					{let $titleText}
						{switch $productSamplesTab.siteFeature}/* REFER TO: ViewCartCarouselService */
							{case 'PRODUCT_DONATIONS'}Donation Samples
							{case 'PRODUCT_SAMPLES'}Free Sample!
						{/switch}
					{/let}
					/* mark as selected only if $cmEventSource == 'view_cart' */
					/* until which tab is selected is decided, ignore view_cart only and make it always selected */
					/* <li role="tab" tabindex="0" aria-selected="{if $cmEventSource_clean == 'view_cart'}true{else}false{/if}" data-component="tabitem" class="{if $cmEventSource_clean == 'view_cart'}selected{/if}" data-tabname="{$titleText}" data-sitefeature="{$productSamplesTab.siteFeature}" data-impressionid="{$productSamplesTab.impressionId}" data-parentimpressionid="{$productSamplesTab.parentImpressionId}" data-parentvariantid="{$productSamplesTab.parentVariantId}">{$titleText}</li> */
					<li role="tab" tabindex="0" aria-selected="true" data-component="tabitem" class="selected" data-tabname="{$titleText}" data-sitefeature="{$productSamplesTab.siteFeature}" data-impressionid="{$productSamplesTab.impressionId}" data-parentimpressionid="{$productSamplesTab.parentImpressionId}" data-parentvariantid="{$productSamplesTab.parentVariantId}">{$titleText}</li>
				{else}
					<!-- NO SAMPLES --> /* for our own sanity */
				{/if}
				/* now recommendation carousels */
				{if $recommendationTabs and length($recommendationTabs)}
					{foreach $tab in $recommendationTabs}
						{if $recommendationTabs[index($tab)].carouselData and $recommendationTabs[index($tab)].carouselData.products}			
							/* mark as selected if tab is first and there's no sampleCarousel OR $cmEventSource == 'checkout' */
							<li role="tab" tabindex="0" aria-selected="{if isFirst($tab) and (not $hasProductSamplesTab or $cmEventSource_clean == 'checkout')}true{else}false{/if}" data-component="tabitem" class="{if isFirst($tab) and (not $hasProductSamplesTab or $cmEventSource_clean == 'checkout')}selected{/if}" data-tabname="{$tab.title}" data-sitefeature="{$tab.siteFeature}" data-impressionid="{$tab.impressionId}" data-parentimpressionid="{$tab.parentImpressionId}" data-parentvariantid="{$tab.parentVariantId}">{$tab.title}</li>
						{else}
							<!-- NO PRODS IN CAR[{index($tab)}] ({if $recommendationTabs[index($tab)].title}{$recommendationTabs[index($tab)].title}{/if}) -->
						{/if}
					{/foreach}
				{/if}
			</ul>
			/* now the selected tab's carousel */
			<!-- $cmEventSource_clean: {$cmEventSource_clean} -->
			/* until which tab is selected is decided, ignore view_cart only and make it always selected */
			/* {if $hasProductSamplesTab and $cmEventSource_clean == 'view_cart'} */
			{if $hasProductSamplesTab}
				<!-- SAMPLES -->
				<div role="tabpanel" class="tab-container light-carousel" data-component="tabpanel" data-cmSiteFeature="{$productSamplesTab.siteFeature}">
					{call common.simpleCarousel}
						{param items:$productSamplesTab.carouselData.products /}
						{param title:$productSamplesTab.title /}
						{param siteFeature:$productSamplesTab.siteFeature /}
						{param cmEventSource}
							/* REFER TO: ViewCartCarouselService
							 * cmEventSource is also checked in gridItem.soy for "FREE" price
							 * this change also needs to happen in 
							 */
							{switch $productSamplesTab.siteFeature}
								{case 'PRODUCT_DONATIONS'}dn_carousel_
								{case 'PRODUCT_SAMPLES'}ps_carousel_
							{/switch}
							{$cmEventSource_clean}
						{/param}
						{param itemType:'grid_prodSample' /}
					{/call}
				</div>
			{else}
				{if $recommendationTabs and length($recommendationTabs)}
					<!-- RECS -->
					<div role="tabpanel" class="tab-container light-carousel" data-component="tabpanel" data-cmSiteFeature="{$recommendationTabs[0].siteFeature}">
						{if $recommendationTabs[0].carouselData and $recommendationTabs[0].carouselData.products}
							{call common.simpleCarousel}
								{param items:$recommendationTabs[0].carouselData.products /}
								{param itemType:'grid' /}
							{/call}
						{/if}
					</div>
				{/if}
			{/if}
		</div>
	{/if}
{/template}


