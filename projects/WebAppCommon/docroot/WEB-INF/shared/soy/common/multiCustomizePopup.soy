{namespace common}

/**
 * @param data
 */
{template .multiCustomizePopup autoescape="false"}
  <div id="multi-customize-popup" data-cmeventsource="FinalizingExternal">
    <div class="qs-popup-content customize-popup" data-current-step="{$data.state ? $data.state : 1}">
      <h1 class="header" data-multi-step="1">Customize Your Items</h1>
      <p class="description" data-multi-step="1">We cut meat, cheese and seafood to order. Tell us how you want it <strong>(*required)</strong></p>
      <h1 class="warning" data-multi-step="2">
        <span class="sign"></span>
        <div class="warning-content">Without customization, these items will be deleted from your cart.</div>
      </h1>
      <h1 class="header" data-multi-step="3">Adding Recipe Ingredients to Cart...</h1>
      <div class="body">      
        {if $data and $data.itemGroups}
          {foreach $group in $data.itemGroups}
          <ol class="shopfromlists" data-name="{$group.externalGroup}">
            {foreach $lineData in $group.groupData}
              {let $item:$lineData.productData /}
              <li class="itemlist-item {not $item.available ? 'unavailable' : ''}" 
                  data-component="product" {if $item.itemId}data-productid="{$item.itemId}"{/if} data-atcRemoveOnSuccess="true">
                {call .multiItem data="$item"}
                  {param item:$item /}
                {/call}
              </li>
            {/foreach}
          </ol>
          {/foreach}
        {/if}
      </div>
      <div class="footer">
        <div data-multi-step="1">
          <button class="cssbutton orange large fixwidth" data-atc-blocking="true" data-component="ATCButton" data-ref="#multi-customize-popup">Done</button>
        </div>
        <div data-multi-step="2">
          <button class="cssbutton red large" data-component="delete-and-close">Delete Items & Close</button>{sp}
          <button class="cssbutton black large" data-component="cancel">Cancel</button>
        </div>
      </div>
    </div>
  </div>
{/template}

/**
* @param item
* @param? tempConfig
*/
{template .multiItem}
<div class="itemlist-item-productimage_wrapper">
  <div class="itemlist-item-burst_wrapper">
      <img src="{$item.productImage}" class="itemlist-item-productimage">
    {call common.bursts}{param badge:$item.badge /}{param deal:$item.deal /}{param usq:$item.usq /}{/call}
  </div>
</div>
<div class="itemlist-item-header-buttons">
  <button data-itemname="{$item.productName}" data-itemid="{$item.itemId}" class="deletefromrecipe">delete from recipe</button>
</div>
<div class="itemlist-item-header">    
    <span data-url="{$item.productPageUrl}" class="itemlist-item-header-name">{$item.productName}</span>{sp}
    {call common.rating.customer}{param ratingValue:$item.customerRating /}{param reviewCount:$item.customerRatingReviewCount /}{/call}
    {call common.rating.expert}{param ratingValue:$item.expertRating /}{/call}
    {call common.rating.wine}{param ratingValue:$item.wineRating /}{/call}
    {call common.rating.sustainability}{param ratingValue:$item.sustainabilityRating /}{/call}    
    {if $item.configDescr}<br><i class="itemlist-item-header-configuration">
      {if $tempConfig}
        Temporary customization:</i><br>{$item.configDescr}
      {else}
        {$item.configDescr}</i>
      {/if}
    {/if}
    <div class="availability">
      {call common.availabilityMessage}{param item:$item /}{/call}
    </div>
</div>
<div class="itemlist-item-customization">
  <p class="cust-title">Custom Options:</p>

  {let $hasSingleSalesUnit:(length($item.salesUnit)==1) /}
  {if not $hasSingleSalesUnit}
    {call common.rawSalesunit}
      {param options:$item.salesUnit /}
      {param label:$item.salesUnitLabel /}
      {param optional:false /}
    {/call}
    {if $item.salesUnitDescrPopup}
      <button class="cssbutton grey css-help-button" onclick="pop('{$item.salesUnitDescrPopup}',335,375)">?</button>
    {/if}
  {else}
    <input type="hidden" class="salesunit" data-component="salesunit" data-productdata-name="salesUnit" value="{$item.salesUnit[0].id}"/>
  {/if}

  {call common.skuControlVariations}{param variations:$item.variations /}{/call}
</div>
<div class="itemlist-item-controls">
  <div class="itemlist-item-controls-subtotal">
    {call common.quantitybox}
      {param quantity:$item.quantity /}
    {/call}
  </div>
  <div class="itemlist-item-price"> 
    {call common.price}
      {param wasPrice:$item.wasPrice /}
      {param price:$item.price /}
      {param scaleUnit:$item.scaleUnit /}
      {param aboutPriceText:$item.aboutPriceText /}
    {/call}
    {if $item.taxAndDeposit}<i>{$item.taxAndDeposit}</i>{/if}
    {if $item.dealInfo}<div class="itemlist-item-price-deal">{$item.dealInfo}</div>{/if}
    {if $item.savingString}<div class="itemlist-item-price-deal">{$item.savingString}</div>{/if}
    {if $item.coupon}
     {call common.ecoupon}
      {param coupon:$item.coupon /}
      {param couponDisplay:$item.couponDisplay /}
      {param couponClipped:$item.couponClipped /}
      {param couponStatusText:$item.couponStatusText /}
      {/call}
    {/if}
  </div>
  <div class="itemlist-item-total">
    {call .multiCustomizeSubtotal}{param item:$item /}{/call}
  </div>
  {call common.productData}
    {param productId:$item.productId /}
    {param externalGroup:$item.externalGroup /}
    {param externalAgency:$item.externalAgency /}
    {param externalSource:$item.externalSource /}
    {param catId:$item.catId /}
    {param skuCode:$item.skuCode /}
    {param listId:$item.listId /}
    {param atcItemId:$item.itemId /}
    {param isAlcoholic:$item.alcoholic /}
    {param originalLineId:$item.originalLineId /}
  {/call}
  {call common.atcInCart}
    {param amount:$item.inCartAmount /}
    {param atcItemId:$item.itemId /}
  {/call}
</div>
{/template}

/**
* Calling wrapper for common subtotal template
* @param item
*/
{template .multiCustomizeSubtotal}
  {let $pricingUnit:$item.availMatPrices?.0.pricingUnit /}

  {if $pricingUnit == 'LB' }
    {call common.subtotal data="all"}
      {param customTemplate:'common.multiCustomizeSubtotalLbInner' /}
    {/call}
  {else}
    {call common.subtotal data="all"}
      {param customTemplate:'common.multiCustomizeSubtotalInner' /}
    {/call}
  {/if}
{/template}

/**
 * @param price
 * @param quantity
 * @param pricingUnit
 */
{template .multiCustomizeSubtotalLbInner}
| Subtotal: <b>${$price}</b>{sp}Price{sp}<span class="qty"><strong>{round($quantity,2)}{$pricingUnit}</strong></span>{sp}estimated</a>
{/template}

/**
 * @param price
 */
{template .multiCustomizeSubtotalInner}
| Subtotal: <b>${$price}</b>
{/template}
