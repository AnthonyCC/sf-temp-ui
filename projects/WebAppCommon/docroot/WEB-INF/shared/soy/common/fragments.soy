{namespace common}

/**
 * @param price
 */
{template .formatDecimalPrice}
	{if $price - floor($price) == 0}
		${floor($price)}.00
	{elseif $price * 10 - floor($price * 10) == 0}
		{$price}0
	{else}
		${$price}
	{/if}
{/template}

/**
 * @param scaleUnit
 * @param price
 * @param? wasPrice wasPrice
 * @param? aboutPriceText aboutPriceText
 */
{template .price autoescape="false"}
	{if $wasPrice}
		<span class="save-price">{call common.formatDecimalPrice}{param price:$price /}{/call}/{$scaleUnit}</span> <s>${$wasPrice}</s>
	{else}
		{call common.formatDecimalPrice}{param price:$price /}{/call}/{$scaleUnit}
	{/if}
	{if $aboutPriceText}
		<span class="about-price">{$aboutPriceText}</span>
	{/if}
{/template}

/**
* @param? fromProducts
* @param? numProducts
* @param productList
*/
{template .productList autoescape="false"}
{let $len: length($productList) /}
{let $nProducts: $numProducts ? ($numProducts < $len ? $numProducts : $len) : $len /}
{let $fProducts: $fromProducts ? $fromProducts : 0 /}
{let $l: $nProducts - $fProducts /}
{let $lines: ceiling($l / 5) /}
{for $line in range(0, $lines)}
  <ul class="products{if $line == $lines - 1} lastLine{/if}">
    {for $col in range(0, 5)}
      {if $fProducts + $col + $line * 5 < $nProducts}
        {let $product: $productList[$fProducts + $col + $line * 5] /}
        {call common.transactionalGridItem}
          {param item:$product /}
          {param extraClass:(($col != 4 and $fProducts + $col + $line * 5 != $nProducts - 1) ? 'browseTransactionalProduct' : 'browseTransactionalProduct lastInLine') /}
        {/call}
      {/if}
    {/for}
  </ul>
{/for}
{/template}
