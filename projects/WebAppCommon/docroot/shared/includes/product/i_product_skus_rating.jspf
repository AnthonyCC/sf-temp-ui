<%@ page import='com.freshdirect.framework.util.StringUtil'%>
<%@ page import='com.freshdirect.fdstore.content.ContentFactory' %>
<%@ page import='com.freshdirect.cms.util.ProductInfoUtil'%>

<fd:ProduceRatingCheck>
	<%
	
	boolean matchFound = false; //default to false

	//this is taking the place of a skuCode
	String deptIdCheck = productInfo.getSkuCode().toString().substring(0,3);
	
	if ( deptIdCheck != null && !"".equals(deptIdCheck) ) {
		deptIdCheck= deptIdCheck.toUpperCase();

		// grab sku prefixes that should show ratings
		String _skuPrefixes = FDStoreProperties.getRatingsSkuPrefixes();

		//if we have prefixes then check them
		if ( _skuPrefixes != null && !"".equals(_skuPrefixes) ) {
			StringTokenizer st = new StringTokenizer(_skuPrefixes, ","); //setup for splitting property
			String curPrefix = ""; //holds prefix to check against
			String spacer="* "; //spacing for sysOut calls
			
			//loop and check each prefix
			while( st.hasMoreElements() ) {				
				curPrefix = st.nextToken();

				//if prefix matches get product info
				if( deptIdCheck.startsWith(curPrefix) ) {
					matchFound = true;
				}
				//exit on matched sku prefix
				if ( matchFound ) { break; }
				spacer = spacer + "   ";
			}
		}
	}

	if ( matchFound ) {
		if ( productInfo.getRating(ProductInfoUtil.getPickingPlantId(productInfo)) != null ) { 
				
			String rating="";
			EnumOrderLineRating enumRating = productInfo.getRating(ProductInfoUtil.getPickingPlantId(productInfo));
				
			if ( enumRating != null && enumRating.isEligibleToDisplay() ) {
				rating = enumRating.getStatusCodeInDisplayFormat();
				%>
				<table cellpadding="0" cellspacing="0" border="0" <% if (alignRight) { %>align="right"<% } %>>
					<tr valign="middle">
						<td class="qualityRating">
							<%=enumRating.getShortDescription()%> - 
						</td>
						<td class="qualityRating">
							<img src="/media_stat/images/ratings/product_<%=rating%>.gif" name="rating" height="11" alt="<%=enumRating.getShortDescription()%>" border="0">
						</td>
					</tr>
				</table>
				<% if (alignRight) { %><div style="clear: both; font-size: 0px;"></div><% } %>
				<%  
			}
		}                            
	}
	%>                      
</fd:ProduceRatingCheck>
<fd:SeafoodSustainCheck>
<%
	/* APPDEV-1979 eliminates the need to check the sku prefix */

	/*
		boolean matchFound = false; //default to false
	
		//this is taking the place of a skuCode
		String deptIdCheck = productInfo.getSkuCode().toString().substring(0,3);
		
		if ( deptIdCheck != null && !"".equals(deptIdCheck) ) {
			deptIdCheck= deptIdCheck.toUpperCase();
	
			// grab sku prefixes that should show ratings
			String _skuPrefixes = FDStoreProperties.getRatingsSkuPrefixes();
	
			//if we have prefixes then check them
			if ( _skuPrefixes != null && !"".equals(_skuPrefixes) ) {
				StringTokenizer st = new StringTokenizer(_skuPrefixes, ","); //setup for splitting property
				String curPrefix = ""; //holds prefix to check against
				String spacer="* "; //spacing for sysOut calls
				
				//loop and check each prefix
				while( st.hasMoreElements() ) {				
					curPrefix = st.nextToken();
	
					//if prefix matches get product info
					if( deptIdCheck.startsWith(curPrefix) ) {
						matchFound = true;
					}
					//exit on matched sku prefix
					if ( matchFound ) { break; }
					spacer = spacer + "   ";
				}
			}
		}
	*/

	/* if ( matchFound ) { */
		if ( productInfo.getSustainabilityRating(ProductInfoUtil.getPickingPlantId(productInfo)) != null ) { 
				
			String rating="";
			boolean skipDisplay = true;
			EnumSustainabilityRating enumRating = productInfo.getSustainabilityRating(ProductInfoUtil.getPickingPlantId(productInfo));
			
			if ( enumRating != null && enumRating.isEligibleToDisplay() ) {
				if (enumRating.getId() == 0) {
					if (__prd.showDefaultSustainabilityRating()) {
						rating = enumRating.getStatusCodeInDisplayFormat();
						skipDisplay = false;
					}
				} else {
					rating = enumRating.getStatusCodeInDisplayFormat();
					skipDisplay = false;
				}
				if (!skipDisplay) { %>
					<table cellpadding="0" cellspacing="0" border="0" <% if (alignRight) { %>align="right"<% } %>>
						<tr valign="middle">
							<td class="ssRating ssRating<%=rating%>">
								<a href="javascript:pop('/shared/brandpop.jsp?brandId=bd_sustainable_ratings',400,585)">Sustainability Rating</a> -
							</td>
							<td class="ssRating ssRating<%=rating%>">
								&nbsp;<a href="javascript:pop('/shared/brandpop.jsp?brandId=bd_sustainable_ratings',400,585)"><img src="/media_stat/images/ratings/fish_<%=rating%>.gif" name="ss_rating_<%=rating%>" height="15" width="35" alt="<%=enumRating.getShortDescription()%>" border="0" /></a>
							</td>
						</tr>
					</table>
					<% if (alignRight) { %><div style="clear: both; font-size: 0px;"></div><% } %>
				<% } %>
			<% }
		}
	/* } */
%>
</fd:SeafoodSustainCheck>
<%---- Mulitple skus for Freshness Guaranteed ---%>
<%

List freshList = (List)session.getAttribute("freshList");
String freshDays = productInfo.getFreshness(ProductInfoUtil.getPickingPlantId(productInfo));
if(freshDays != null && freshDays.length() > 0) {
	
	if(freshList != null && !freshList.isEmpty()) {
		// get the last value stored in the List
		String val = (String)freshList.get(freshList.size()-1);
		// if the val is larger than the new value, replace it with the new value
		// only diplay the lowest shelf life for multiple skus
		if(StringUtil.isNumeric(val)) {
			if (Integer.parseInt(val) > Integer.parseInt(freshDays)) {
				freshList.remove(freshList.size()-1);
				freshList.add(freshDays);
			}
		} else if (!StringUtil.isNumeric(val)) {
			// add to list b/c last value from list is not numeric (it's a domain label such as "FARM FRESH"
			freshList.add(freshDays);
		}
	} 
	session.setAttribute("freshList", freshList);
} else if (freshDays == null && freshList != null && !freshList.isEmpty()) {
	session.setAttribute("freshList", null);
}

%>